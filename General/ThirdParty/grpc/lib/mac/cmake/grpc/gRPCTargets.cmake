# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.17)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget gRPC::absl_algorithm gRPC::absl_algorithm_container gRPC::absl_atomic_hook gRPC::absl_bad_optional_access gRPC::absl_bad_variant_access gRPC::absl_base gRPC::absl_base_internal gRPC::absl_bind_front gRPC::absl_bits gRPC::absl_city gRPC::absl_civil_time gRPC::absl_compressed_tuple gRPC::absl_config gRPC::absl_container_common gRPC::absl_container_memory gRPC::absl_cord gRPC::absl_core_headers gRPC::absl_debugging_internal gRPC::absl_demangle_internal gRPC::absl_dynamic_annotations gRPC::absl_endian gRPC::absl_errno_saver gRPC::absl_exponential_biased gRPC::absl_fixed_array gRPC::absl_flat_hash_map gRPC::absl_function_ref gRPC::absl_graphcycles_internal gRPC::absl_hash gRPC::absl_hash_function_defaults gRPC::absl_hash_policy_traits gRPC::absl_hashtable_debug_hooks gRPC::absl_hashtablez_sampler gRPC::absl_have_sse gRPC::absl_inlined_vector gRPC::absl_inlined_vector_internal gRPC::absl_int128 gRPC::absl_kernel_timeout_internal gRPC::absl_layout gRPC::absl_log_severity gRPC::absl_malloc_internal gRPC::absl_memory gRPC::absl_numeric_representation gRPC::absl_optional gRPC::absl_raw_hash_map gRPC::absl_raw_hash_set gRPC::absl_raw_logging_internal gRPC::absl_span gRPC::absl_spinlock_wait gRPC::absl_stacktrace gRPC::absl_status gRPC::absl_statusor gRPC::absl_str_format gRPC::absl_str_format_internal gRPC::absl_strings gRPC::absl_strings_internal gRPC::absl_symbolize gRPC::absl_synchronization gRPC::absl_throw_delegate gRPC::absl_time gRPC::absl_time_zone gRPC::absl_type_traits gRPC::absl_utility gRPC::absl_variant gRPC::absl_wyhash gRPC::absl_meta gRPC::cares gRPC::re2 gRPC::ssl gRPC::crypto gRPC::zlibstatic gRPC::address_sorting gRPC::gpr gRPC::grpc gRPC::grpc_unsecure gRPC::grpc++ gRPC::grpc++_alts gRPC::grpc++_error_details gRPC::grpc++_reflection gRPC::grpc++_unsecure gRPC::grpc_plugin_support gRPC::grpcpp_channelz gRPC::upb gRPC::grpc_cpp_plugin gRPC::grpc_csharp_plugin gRPC::grpc_node_plugin gRPC::grpc_objective_c_plugin gRPC::grpc_php_plugin gRPC::grpc_python_plugin gRPC::grpc_ruby_plugin)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target gRPC::absl_algorithm
add_library(gRPC::absl_algorithm INTERFACE IMPORTED)

set_target_properties(gRPC::absl_algorithm PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config"
)

# Create imported target gRPC::absl_algorithm_container
add_library(gRPC::absl_algorithm_container INTERFACE IMPORTED)

set_target_properties(gRPC::absl_algorithm_container PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_algorithm;gRPC::absl_core_headers;gRPC::absl_meta"
)

# Create imported target gRPC::absl_atomic_hook
add_library(gRPC::absl_atomic_hook INTERFACE IMPORTED)

set_target_properties(gRPC::absl_atomic_hook PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_core_headers"
)

# Create imported target gRPC::absl_bad_optional_access
add_library(gRPC::absl_bad_optional_access STATIC IMPORTED)

set_target_properties(gRPC::absl_bad_optional_access PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_raw_logging_internal"
)

# Create imported target gRPC::absl_bad_variant_access
add_library(gRPC::absl_bad_variant_access STATIC IMPORTED)

set_target_properties(gRPC::absl_bad_variant_access PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_raw_logging_internal"
)

# Create imported target gRPC::absl_base
add_library(gRPC::absl_base STATIC IMPORTED)

set_target_properties(gRPC::absl_base PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_atomic_hook;gRPC::absl_base_internal;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_dynamic_annotations;gRPC::absl_log_severity;gRPC::absl_raw_logging_internal;gRPC::absl_spinlock_wait;gRPC::absl_type_traits;Threads::Threads;\$<LINK_ONLY:\$<\$<BOOL:LIBRT-NOTFOUND>:-lrt>>;\$<LINK_ONLY:\$<\$<BOOL:>:\"advapi32\">>"
)

# Create imported target gRPC::absl_base_internal
add_library(gRPC::absl_base_internal INTERFACE IMPORTED)

set_target_properties(gRPC::absl_base_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_bind_front
add_library(gRPC::absl_bind_front INTERFACE IMPORTED)

set_target_properties(gRPC::absl_bind_front PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base_internal;gRPC::absl_compressed_tuple"
)

# Create imported target gRPC::absl_bits
add_library(gRPC::absl_bits INTERFACE IMPORTED)

set_target_properties(gRPC::absl_bits PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_core_headers"
)

# Create imported target gRPC::absl_city
add_library(gRPC::absl_city STATIC IMPORTED)

set_target_properties(gRPC::absl_city PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_endian"
)

# Create imported target gRPC::absl_civil_time
add_library(gRPC::absl_civil_time STATIC IMPORTED)

set_target_properties(gRPC::absl_civil_time PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target gRPC::absl_compressed_tuple
add_library(gRPC::absl_compressed_tuple INTERFACE IMPORTED)

set_target_properties(gRPC::absl_compressed_tuple PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_utility"
)

# Create imported target gRPC::absl_config
add_library(gRPC::absl_config INTERFACE IMPORTED)

set_target_properties(gRPC::absl_config PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target gRPC::absl_container_common
add_library(gRPC::absl_container_common INTERFACE IMPORTED)

set_target_properties(gRPC::absl_container_common PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_container_memory
add_library(gRPC::absl_container_memory INTERFACE IMPORTED)

set_target_properties(gRPC::absl_container_memory PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_memory;gRPC::absl_type_traits;gRPC::absl_utility"
)

# Create imported target gRPC::absl_cord
add_library(gRPC::absl_cord STATIC IMPORTED)

set_target_properties(gRPC::absl_cord PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base;gRPC::absl_base_internal;gRPC::absl_compressed_tuple;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_endian;gRPC::absl_fixed_array;gRPC::absl_function_ref;gRPC::absl_inlined_vector;gRPC::absl_optional;gRPC::absl_raw_logging_internal;gRPC::absl_strings;gRPC::absl_strings_internal;gRPC::absl_throw_delegate;gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_core_headers
add_library(gRPC::absl_core_headers INTERFACE IMPORTED)

set_target_properties(gRPC::absl_core_headers PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config"
)

# Create imported target gRPC::absl_debugging_internal
add_library(gRPC::absl_debugging_internal STATIC IMPORTED)

set_target_properties(gRPC::absl_debugging_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_core_headers;gRPC::absl_config;gRPC::absl_dynamic_annotations;gRPC::absl_errno_saver;gRPC::absl_raw_logging_internal"
)

# Create imported target gRPC::absl_demangle_internal
add_library(gRPC::absl_demangle_internal STATIC IMPORTED)

set_target_properties(gRPC::absl_demangle_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base;gRPC::absl_core_headers"
)

# Create imported target gRPC::absl_dynamic_annotations
add_library(gRPC::absl_dynamic_annotations INTERFACE IMPORTED)

set_target_properties(gRPC::absl_dynamic_annotations PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config"
)

# Create imported target gRPC::absl_endian
add_library(gRPC::absl_endian INTERFACE IMPORTED)

set_target_properties(gRPC::absl_endian PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base;gRPC::absl_config;gRPC::absl_core_headers"
)

# Create imported target gRPC::absl_errno_saver
add_library(gRPC::absl_errno_saver INTERFACE IMPORTED)

set_target_properties(gRPC::absl_errno_saver PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config"
)

# Create imported target gRPC::absl_exponential_biased
add_library(gRPC::absl_exponential_biased STATIC IMPORTED)

set_target_properties(gRPC::absl_exponential_biased PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_core_headers"
)

# Create imported target gRPC::absl_fixed_array
add_library(gRPC::absl_fixed_array INTERFACE IMPORTED)

set_target_properties(gRPC::absl_fixed_array PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_compressed_tuple;gRPC::absl_algorithm;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_dynamic_annotations;gRPC::absl_throw_delegate;gRPC::absl_memory"
)

# Create imported target gRPC::absl_flat_hash_map
add_library(gRPC::absl_flat_hash_map INTERFACE IMPORTED)

set_target_properties(gRPC::absl_flat_hash_map PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_container_memory;gRPC::absl_hash_function_defaults;gRPC::absl_raw_hash_map;gRPC::absl_algorithm_container;gRPC::absl_memory"
)

# Create imported target gRPC::absl_function_ref
add_library(gRPC::absl_function_ref INTERFACE IMPORTED)

set_target_properties(gRPC::absl_function_ref PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base_internal;gRPC::absl_meta"
)

# Create imported target gRPC::absl_graphcycles_internal
add_library(gRPC::absl_graphcycles_internal STATIC IMPORTED)

set_target_properties(gRPC::absl_graphcycles_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base;gRPC::absl_base_internal;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_malloc_internal;gRPC::absl_raw_logging_internal"
)

# Create imported target gRPC::absl_hash
add_library(gRPC::absl_hash STATIC IMPORTED)

set_target_properties(gRPC::absl_hash PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_city;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_endian;gRPC::absl_fixed_array;gRPC::absl_meta;gRPC::absl_int128;gRPC::absl_strings;gRPC::absl_optional;gRPC::absl_variant;gRPC::absl_utility;gRPC::absl_wyhash"
)

# Create imported target gRPC::absl_hash_function_defaults
add_library(gRPC::absl_hash_function_defaults INTERFACE IMPORTED)

set_target_properties(gRPC::absl_hash_function_defaults PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_cord;gRPC::absl_hash;gRPC::absl_strings"
)

# Create imported target gRPC::absl_hash_policy_traits
add_library(gRPC::absl_hash_policy_traits INTERFACE IMPORTED)

set_target_properties(gRPC::absl_hash_policy_traits PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_meta"
)

# Create imported target gRPC::absl_hashtable_debug_hooks
add_library(gRPC::absl_hashtable_debug_hooks INTERFACE IMPORTED)

set_target_properties(gRPC::absl_hashtable_debug_hooks PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config"
)

# Create imported target gRPC::absl_hashtablez_sampler
add_library(gRPC::absl_hashtablez_sampler STATIC IMPORTED)

set_target_properties(gRPC::absl_hashtablez_sampler PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base;gRPC::absl_exponential_biased;gRPC::absl_have_sse;gRPC::absl_synchronization"
)

# Create imported target gRPC::absl_have_sse
add_library(gRPC::absl_have_sse INTERFACE IMPORTED)

set_target_properties(gRPC::absl_have_sse PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
)

# Create imported target gRPC::absl_inlined_vector
add_library(gRPC::absl_inlined_vector INTERFACE IMPORTED)

set_target_properties(gRPC::absl_inlined_vector PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_algorithm;gRPC::absl_core_headers;gRPC::absl_inlined_vector_internal;gRPC::absl_throw_delegate;gRPC::absl_memory"
)

# Create imported target gRPC::absl_inlined_vector_internal
add_library(gRPC::absl_inlined_vector_internal INTERFACE IMPORTED)

set_target_properties(gRPC::absl_inlined_vector_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_compressed_tuple;gRPC::absl_core_headers;gRPC::absl_memory;gRPC::absl_span;gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_int128
add_library(gRPC::absl_int128 STATIC IMPORTED)

set_target_properties(gRPC::absl_int128 PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_bits"
)

# Create imported target gRPC::absl_kernel_timeout_internal
add_library(gRPC::absl_kernel_timeout_internal INTERFACE IMPORTED)

set_target_properties(gRPC::absl_kernel_timeout_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_core_headers;gRPC::absl_raw_logging_internal;gRPC::absl_time"
)

# Create imported target gRPC::absl_layout
add_library(gRPC::absl_layout INTERFACE IMPORTED)

set_target_properties(gRPC::absl_layout PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_meta;gRPC::absl_strings;gRPC::absl_span;gRPC::absl_utility"
)

# Create imported target gRPC::absl_log_severity
add_library(gRPC::absl_log_severity STATIC IMPORTED)

set_target_properties(gRPC::absl_log_severity PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_core_headers"
)

# Create imported target gRPC::absl_malloc_internal
add_library(gRPC::absl_malloc_internal STATIC IMPORTED)

set_target_properties(gRPC::absl_malloc_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base;gRPC::absl_base_internal;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_dynamic_annotations;gRPC::absl_raw_logging_internal;Threads::Threads"
)

# Create imported target gRPC::absl_memory
add_library(gRPC::absl_memory INTERFACE IMPORTED)

set_target_properties(gRPC::absl_memory PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_core_headers;gRPC::absl_meta"
)

# Create imported target gRPC::absl_numeric_representation
add_library(gRPC::absl_numeric_representation INTERFACE IMPORTED)

set_target_properties(gRPC::absl_numeric_representation PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config"
)

# Create imported target gRPC::absl_optional
add_library(gRPC::absl_optional INTERFACE IMPORTED)

set_target_properties(gRPC::absl_optional PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_bad_optional_access;gRPC::absl_base_internal;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_memory;gRPC::absl_type_traits;gRPC::absl_utility"
)

# Create imported target gRPC::absl_raw_hash_map
add_library(gRPC::absl_raw_hash_map INTERFACE IMPORTED)

set_target_properties(gRPC::absl_raw_hash_map PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_container_memory;gRPC::absl_raw_hash_set;gRPC::absl_throw_delegate"
)

# Create imported target gRPC::absl_raw_hash_set
add_library(gRPC::absl_raw_hash_set STATIC IMPORTED)

set_target_properties(gRPC::absl_raw_hash_set PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_bits;gRPC::absl_compressed_tuple;gRPC::absl_config;gRPC::absl_container_common;gRPC::absl_container_memory;gRPC::absl_core_headers;gRPC::absl_endian;gRPC::absl_hash_policy_traits;gRPC::absl_hashtable_debug_hooks;gRPC::absl_have_sse;gRPC::absl_layout;gRPC::absl_memory;gRPC::absl_meta;gRPC::absl_optional;gRPC::absl_utility;gRPC::absl_hashtablez_sampler"
)

# Create imported target gRPC::absl_raw_logging_internal
add_library(gRPC::absl_raw_logging_internal STATIC IMPORTED)

set_target_properties(gRPC::absl_raw_logging_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_atomic_hook;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_log_severity"
)

# Create imported target gRPC::absl_span
add_library(gRPC::absl_span INTERFACE IMPORTED)

set_target_properties(gRPC::absl_span PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_algorithm;gRPC::absl_core_headers;gRPC::absl_throw_delegate;gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_spinlock_wait
add_library(gRPC::absl_spinlock_wait STATIC IMPORTED)

set_target_properties(gRPC::absl_spinlock_wait PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base_internal;gRPC::absl_core_headers;gRPC::absl_errno_saver"
)

# Create imported target gRPC::absl_stacktrace
add_library(gRPC::absl_stacktrace STATIC IMPORTED)

set_target_properties(gRPC::absl_stacktrace PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_debugging_internal;gRPC::absl_config;gRPC::absl_core_headers"
)

# Create imported target gRPC::absl_status
add_library(gRPC::absl_status STATIC IMPORTED)

set_target_properties(gRPC::absl_status PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_atomic_hook;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_raw_logging_internal;gRPC::absl_inlined_vector;gRPC::absl_stacktrace;gRPC::absl_symbolize;gRPC::absl_strings;gRPC::absl_cord;gRPC::absl_str_format;gRPC::absl_optional"
)

# Create imported target gRPC::absl_statusor
add_library(gRPC::absl_statusor STATIC IMPORTED)

set_target_properties(gRPC::absl_statusor PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_status;gRPC::absl_core_headers;gRPC::absl_raw_logging_internal;gRPC::absl_type_traits;gRPC::absl_strings;gRPC::absl_utility;gRPC::absl_variant"
)

# Create imported target gRPC::absl_str_format
add_library(gRPC::absl_str_format INTERFACE IMPORTED)

set_target_properties(gRPC::absl_str_format PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_str_format_internal"
)

# Create imported target gRPC::absl_str_format_internal
add_library(gRPC::absl_str_format_internal STATIC IMPORTED)

set_target_properties(gRPC::absl_str_format_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_bits;gRPC::absl_strings;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_numeric_representation;gRPC::absl_type_traits;gRPC::absl_int128;gRPC::absl_span"
)

# Create imported target gRPC::absl_strings
add_library(gRPC::absl_strings STATIC IMPORTED)

set_target_properties(gRPC::absl_strings PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_strings_internal;gRPC::absl_base;gRPC::absl_bits;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_endian;gRPC::absl_int128;gRPC::absl_memory;gRPC::absl_raw_logging_internal;gRPC::absl_throw_delegate;gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_strings_internal
add_library(gRPC::absl_strings_internal STATIC IMPORTED)

set_target_properties(gRPC::absl_strings_internal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_endian;gRPC::absl_raw_logging_internal;gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_symbolize
add_library(gRPC::absl_symbolize STATIC IMPORTED)

set_target_properties(gRPC::absl_symbolize PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_debugging_internal;gRPC::absl_demangle_internal;gRPC::absl_base;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_dynamic_annotations;gRPC::absl_malloc_internal;gRPC::absl_raw_logging_internal;gRPC::absl_strings;\$<LINK_ONLY:\$<\$<BOOL:>:\"dbghelp\">>"
)

# Create imported target gRPC::absl_synchronization
add_library(gRPC::absl_synchronization STATIC IMPORTED)

set_target_properties(gRPC::absl_synchronization PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_graphcycles_internal;gRPC::absl_kernel_timeout_internal;gRPC::absl_atomic_hook;gRPC::absl_base;gRPC::absl_base_internal;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_dynamic_annotations;gRPC::absl_malloc_internal;gRPC::absl_raw_logging_internal;gRPC::absl_stacktrace;gRPC::absl_symbolize;gRPC::absl_time;Threads::Threads"
)

# Create imported target gRPC::absl_throw_delegate
add_library(gRPC::absl_throw_delegate STATIC IMPORTED)

set_target_properties(gRPC::absl_throw_delegate PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_raw_logging_internal"
)

# Create imported target gRPC::absl_time
add_library(gRPC::absl_time STATIC IMPORTED)

set_target_properties(gRPC::absl_time PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base;gRPC::absl_civil_time;gRPC::absl_core_headers;gRPC::absl_int128;gRPC::absl_raw_logging_internal;gRPC::absl_strings;gRPC::absl_time_zone"
)

# Create imported target gRPC::absl_time_zone
add_library(gRPC::absl_time_zone STATIC IMPORTED)

set_target_properties(gRPC::absl_time_zone PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<\$<PLATFORM_ID:Darwin>:/Users/zhuzhengjia/Downloads/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk/System/Library/Frameworks/CoreFoundation.framework>"
)

# Create imported target gRPC::absl_type_traits
add_library(gRPC::absl_type_traits INTERFACE IMPORTED)

set_target_properties(gRPC::absl_type_traits PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config"
)

# Create imported target gRPC::absl_utility
add_library(gRPC::absl_utility INTERFACE IMPORTED)

set_target_properties(gRPC::absl_utility PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_base_internal;gRPC::absl_config;gRPC::absl_type_traits"
)

# Create imported target gRPC::absl_variant
add_library(gRPC::absl_variant INTERFACE IMPORTED)

set_target_properties(gRPC::absl_variant PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_bad_variant_access;gRPC::absl_base_internal;gRPC::absl_config;gRPC::absl_core_headers;gRPC::absl_type_traits;gRPC::absl_utility"
)

# Create imported target gRPC::absl_wyhash
add_library(gRPC::absl_wyhash STATIC IMPORTED)

set_target_properties(gRPC::absl_wyhash PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_config;gRPC::absl_endian;gRPC::absl_int128"
)

# Create imported target gRPC::absl_meta
add_library(gRPC::absl_meta INTERFACE IMPORTED)

set_target_properties(gRPC::absl_meta PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::absl_type_traits"
)

# Create imported target gRPC::cares
add_library(gRPC::cares STATIC IMPORTED)

set_target_properties(gRPC::cares PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "CARES_STATICLIB"
  INTERFACE_LINK_LIBRARIES "resolv"
)

# Create imported target gRPC::re2
add_library(gRPC::re2 STATIC IMPORTED)

# Create imported target gRPC::ssl
add_library(gRPC::ssl STATIC IMPORTED)

# Create imported target gRPC::crypto
add_library(gRPC::crypto STATIC IMPORTED)

set_target_properties(gRPC::crypto PROPERTIES
  INTERFACE_LINK_LIBRARIES "pthread"
)

# Create imported target gRPC::zlibstatic
add_library(gRPC::zlibstatic STATIC IMPORTED)

# Create imported target gRPC::address_sorting
add_library(gRPC::address_sorting STATIC IMPORTED)

set_target_properties(gRPC::address_sorting PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "m;pthread"
)

# Create imported target gRPC::gpr
add_library(gRPC::gpr STATIC IMPORTED)

set_target_properties(gRPC::gpr PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "m;pthread;gRPC::absl_base;gRPC::absl_memory;gRPC::absl_status;gRPC::absl_str_format;gRPC::absl_strings;gRPC::absl_synchronization;gRPC::absl_time;gRPC::absl_optional;gRPC::upb"
)

# Create imported target gRPC::grpc
add_library(gRPC::grpc STATIC IMPORTED)

set_target_properties(gRPC::grpc PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::zlibstatic;gRPC::cares;gRPC::address_sorting;gRPC::re2;gRPC::upb;m;pthread;gRPC::absl_flat_hash_map;gRPC::absl_inlined_vector;gRPC::absl_bind_front;gRPC::absl_statusor;gRPC::gpr;gRPC::ssl;gRPC::crypto;gRPC::address_sorting;-framework CoreFoundation"
)

# Create imported target gRPC::grpc_unsecure
add_library(gRPC::grpc_unsecure STATIC IMPORTED)

set_target_properties(gRPC::grpc_unsecure PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "gRPC::zlibstatic;gRPC::cares;gRPC::address_sorting;gRPC::re2;gRPC::upb;m;pthread;gRPC::absl_flat_hash_map;gRPC::absl_inlined_vector;gRPC::absl_bind_front;gRPC::absl_statusor;gRPC::gpr;gRPC::address_sorting;-framework CoreFoundation"
)

# Create imported target gRPC::grpc++
add_library(gRPC::grpc++ STATIC IMPORTED)

set_target_properties(gRPC::grpc++ PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "protobuf::libprotobuf;m;pthread;gRPC::grpc"
)

# Create imported target gRPC::grpc++_alts
add_library(gRPC::grpc++_alts STATIC IMPORTED)

set_target_properties(gRPC::grpc++_alts PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "protobuf::libprotobuf;m;pthread;gRPC::grpc++"
)

# Create imported target gRPC::grpc++_error_details
add_library(gRPC::grpc++_error_details STATIC IMPORTED)

set_target_properties(gRPC::grpc++_error_details PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "protobuf::libprotobuf;m;pthread;gRPC::grpc++"
)

# Create imported target gRPC::grpc++_reflection
add_library(gRPC::grpc++_reflection STATIC IMPORTED)

set_target_properties(gRPC::grpc++_reflection PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "protobuf::libprotobuf;m;pthread;gRPC::grpc++"
)

# Create imported target gRPC::grpc++_unsecure
add_library(gRPC::grpc++_unsecure STATIC IMPORTED)

set_target_properties(gRPC::grpc++_unsecure PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "protobuf::libprotobuf;m;pthread;gRPC::grpc_unsecure"
)

# Create imported target gRPC::grpc_plugin_support
add_library(gRPC::grpc_plugin_support STATIC IMPORTED)

set_target_properties(gRPC::grpc_plugin_support PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "protobuf::libprotoc;protobuf::libprotobuf;m;pthread"
)

# Create imported target gRPC::grpcpp_channelz
add_library(gRPC::grpcpp_channelz STATIC IMPORTED)

set_target_properties(gRPC::grpcpp_channelz PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "protobuf::libprotobuf;m;pthread;gRPC::grpc++"
)

# Create imported target gRPC::upb
add_library(gRPC::upb STATIC IMPORTED)

set_target_properties(gRPC::upb PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "m;pthread"
)

# Create imported target gRPC::grpc_cpp_plugin
add_executable(gRPC::grpc_cpp_plugin IMPORTED)

# Create imported target gRPC::grpc_csharp_plugin
add_executable(gRPC::grpc_csharp_plugin IMPORTED)

# Create imported target gRPC::grpc_node_plugin
add_executable(gRPC::grpc_node_plugin IMPORTED)

# Create imported target gRPC::grpc_objective_c_plugin
add_executable(gRPC::grpc_objective_c_plugin IMPORTED)

# Create imported target gRPC::grpc_php_plugin
add_executable(gRPC::grpc_php_plugin IMPORTED)

# Create imported target gRPC::grpc_python_plugin
add_executable(gRPC::grpc_python_plugin IMPORTED)

# Create imported target gRPC::grpc_ruby_plugin
add_executable(gRPC::grpc_ruby_plugin IMPORTED)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/gRPCTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "protobuf::libprotobuf" "protobuf::libprotoc" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
