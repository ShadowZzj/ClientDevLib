#pragma once

#ifdef _WIN64

#pragma section("wow64_sec$01", read, write)
__declspec(allocate("wow64_sec$01"))inline unsigned char InjectionShell_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x28, 0x53, 0x56, 0x8B, 0x75, 0x08, 0x57, 0x85, 0xF6, 0x75, 0x0C, 0x8D, 0x46, 0x01, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x4E, 0x0C, 0x8D, 0x56, 0x18, 0x89, 0x56, 0x14, 0x85, 0xC9, 0x75, 0x2E, 0x8B, 0x86, 0x88, 0x03, 0x00, 0x00, 0x51, 0x51, 0x52, 0xFF, 0xD0, 0x89, 0x06, 0x85, 0xC0, 0x0F, 0x85, 0xC9, 0x00, 0x00, 0x00, 0x8B, 0x86, 0x9C, 0x03, 0x00, 0x00, 0xFF, 0xD0, 0x89, 0x46, 0x04, 0xB8, 0x28, 0x00, 0x00, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x86, 0x78, 0x03, 0x00, 0x00, 0x83, 0xF9, 0x01, 0x75, 0x3C, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x83, 0xF8, 0x3D, 0x75, 0x0B, 0x8B, 0x86, 0xC4, 0x03, 0x00, 0x00, 0x8B, 0x40, 0x04, 0xEB, 0x07, 0x80, 0x4D, 0x08, 0x01, 0x8B, 0x45, 0x08, 0x8B, 0x96, 0x8C, 0x03, 0x00, 0x00, 0x8D, 0x4E, 0x10, 0x56, 0x51, 0x8D, 0x4D, 0xF4, 0x51, 0x50, 0xFF, 0xD2, 0x89, 0x46, 0x04, 0xEB, 0x69, 0x83, 0xF8, 0x64, 0x0F, 0x82, 0x08, 0x01, 0x00, 0x00, 0x8D, 0xBE, 0x28, 0x03, 0x00, 0x00, 0x33, 0xC0, 0x89, 0x57, 0x10, 0x81, 0xBE, 0x7C, 0x03, 0x00, 0x00, 0x5A, 0x29, 0x00, 0x00, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x89, 0x45, 0xF8, 0x75, 0x06, 0x89, 0x57, 0x0C, 0x89, 0x47, 0x10, 0x83, 0x7E, 0x0C, 0x02, 0x8D, 0x4E, 0x10, 0x75, 0x4B, 0x81, 0xBE, 0x7C, 0x03, 0x00, 0x00, 0xEE, 0x42, 0x00, 0x00, 0x8D, 0x55, 0x08, 0x8B, 0x9E, 0x90, 0x03, 0x00, 0x00, 0x52, 0x8B, 0xD7, 0x77, 0x2E, 0x6A, 0x01, 0x50, 0xFF, 0xD3, 0x89, 0x46, 0x04, 0x8B, 0x45, 0x08, 0x85, 0xC0, 0x0F, 0x84, 0x8C, 0x01, 0x00, 0x00, 0x8B, 0x40, 0x18, 0x89, 0x06, 0x8B, 0x46, 0x08, 0xA8, 0x07, 0x0F, 0x85, 0x8A, 0x01, 0x00, 0x00, 0x33, 0xC0, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x50, 0xFF, 0xD3, 0xEB, 0xD2, 0x8D, 0x55, 0xF8, 0x8D, 0x86, 0x28, 0x02, 0x00, 0x00, 0x52, 0x89, 0x86, 0x24, 0x02, 0x00, 0x00, 0x8D, 0x96, 0x20, 0x02, 0x00, 0x00, 0x8B, 0x86, 0x98, 0x03, 0x00, 0x00, 0x6A, 0x00, 0xFF, 0xD0, 0x81, 0xBE, 0x7C, 0x03, 0x00, 0x00, 0xF0, 0x55, 0x00, 0x00, 0x8D, 0x4D, 0xF4, 0x89, 0x46, 0x04, 0x8B, 0xD7, 0x8B, 0x86, 0x94, 0x03, 0x00, 0x00, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x72, 0x1A, 0x6A, 0x00, 0x51, 0x8D, 0x4D, 0x08, 0x51, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x04, 0xFF, 0x75, 0xF8, 0x8D, 0x8E, 0x20, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0xEB, 0x16, 0x51, 0x8D, 0x4D, 0x08, 0x51, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x04, 0xFF, 0x75, 0xF8, 0x8D, 0x8E, 0x20, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x45, 0xF4, 0x85, 0xC0, 0x0F, 0x89, 0x59, 0xFF, 0xFF, 0xFF, 0x89, 0x46, 0x04, 0xB8, 0x2B, 0x00, 0x00, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x83, 0xF8, 0x3F, 0x75, 0x47, 0x83, 0xF9, 0x02, 0x0F, 0x85, 0xFB, 0x03, 0x00, 0x00, 0x8B, 0x86, 0x90, 0x03, 0x00, 0x00, 0x8D, 0x4D, 0xF4, 0x51, 0x8D, 0x4D, 0x08, 0xC7, 0x45, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x51, 0x0F, 0x57, 0xC0, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x11, 0x45, 0xE0, 0x6A, 0x01, 0x89, 0x55, 0xEC, 0x8D, 0x4E, 0x10, 0x6A, 0x00, 0x8D, 0x55, 0xE0, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00,
	0xFF, 0xD0, 0xE9, 0xF9, 0xFE, 0xFF, 0xFF, 0x83, 0xF8, 0x3E, 0x75, 0x4B, 0x83, 0xF9, 0x02, 0x0F, 0x85, 0xAF, 0x03, 0x00, 0x00, 0x8B, 0x8E, 0x90, 0x03, 0x00, 0x00, 0x8D, 0x45, 0xF4, 0x50, 0x8D, 0x45, 0x08, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x50, 0x6A, 0x01, 0x6A, 0x00, 0x8D, 0x45, 0xDC, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x50, 0x0F, 0x57, 0xC0, 0x8D, 0x46, 0x10, 0x0F, 0x11, 0x45, 0xDC, 0x50, 0x66, 0x0F, 0xD6, 0x45, 0xEC, 0x89, 0x55, 0xE0, 0xC6, 0x45, 0xE4, 0x01, 0xFF, 0xD1, 0xE9, 0xA9, 0xFE, 0xFF, 0xFF, 0x83, 0xF8, 0x3D, 0x0F, 0x85, 0x64, 0x03, 0x00, 0x00, 0x83, 0xF9, 0x02, 0x0F, 0x85, 0x5B, 0x03, 0x00, 0x00, 0x8B, 0x8E, 0x90, 0x03, 0x00, 0x00, 0x8D, 0x45, 0x08, 0x50, 0x6A, 0x00, 0x6A, 0x01, 0x6A, 0x00, 0xFF, 0xB6, 0xC4, 0x03, 0x00, 0x00, 0x8D, 0x46, 0x10, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x50, 0xFF, 0xD1, 0x89, 0x46, 0x04, 0x8B, 0x45, 0x08, 0x85, 0xC0, 0x0F, 0x85, 0x74, 0xFE, 0xFF, 0xFF, 0xB8, 0x3A, 0x00, 0x00, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x64, 0x8B, 0x3D, 0x30, 0x00, 0x00, 0x00, 0x85, 0xFF, 0x75, 0x0C, 0x8D, 0x47, 0x2C, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x4F, 0x0C, 0x85, 0xC9, 0x0F, 0x84, 0xEC, 0x02, 0x00, 0x00, 0x83, 0x79, 0x0C, 0x00, 0x0F, 0x84, 0xE2, 0x02, 0x00, 0x00, 0xA8, 0x03, 0x0F, 0x84, 0x8C, 0x00, 0x00, 0x00, 0x8B, 0x0E, 0x8B, 0x41, 0x3C, 0x8B, 0x44, 0x08, 0x54, 0x89, 0x4D, 0xF8, 0x8D, 0x4D, 0xF4, 0x51, 0x6A, 0x40, 0x8D, 0x4D, 0x08, 0x89, 0x45, 0x08, 0x8B, 0x86, 0xAC, 0x03, 0x00, 0x00, 0x51, 0x8D, 0x4D, 0xF8, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x89, 0x46, 0x04, 0x8B, 0x46, 0x08, 0xA8, 0x01, 0x74, 0x10, 0xFF, 0x75, 0x08, 0x8B, 0x86, 0xA4, 0x03, 0x00, 0x00, 0xFF, 0x75, 0xF8, 0xFF, 0xD0, 0xEB, 0x28, 0xA8, 0x02, 0x74, 0x24, 0x8B, 0x47, 0x0C, 0x8B, 0x40, 0x0C, 0x8B, 0x00, 0x85, 0xC0, 0x0F, 0x84, 0x7E, 0x02, 0x00, 0x00, 0xFF, 0x75, 0x08, 0xFF, 0x70, 0x18, 0x8B, 0x86, 0xA0, 0x03, 0x00, 0x00, 0xFF, 0x75, 0xF8, 0xFF, 0xD0, 0x83, 0xC4, 0x0C, 0x8B, 0x86, 0xAC, 0x03, 0x00, 0x00, 0x8D, 0x4D, 0xF4, 0x51, 0xFF, 0x75, 0xF4, 0x8D, 0x4D, 0x08, 0x51, 0x8D, 0x4D, 0xF8, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x89, 0x46, 0x04, 0xF6, 0x46, 0x08, 0x04, 0x0F, 0x84, 0xAC, 0xFD, 0xFF, 0xFF, 0x8B, 0x47, 0x0C, 0x8B, 0x78, 0x0C, 0x83, 0xC0, 0x0C, 0x3B, 0xF8, 0x74, 0x0F, 0x8B, 0x0E, 0x8B, 0x57, 0x18, 0x3B, 0xD1, 0x74, 0x14, 0x8B, 0x3F, 0x3B, 0xF8, 0x75, 0xF3, 0xB8, 0x13, 0x00, 0x00, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x8E, 0x80, 0x03, 0x00, 0x00, 0x8B, 0x9E, 0x84, 0x03, 0x00, 0x00, 0x83, 0xC1, 0x0F, 0x03, 0xD9, 0x83, 0xE3, 0xF0, 0x89, 0x13, 0x8B, 0x47, 0x20, 0x89, 0x43, 0x04, 0x8B, 0x86, 0x78, 0x03, 0x00, 0x00, 0x89, 0x43, 0x08, 0x8B, 0x86, 0xB8, 0x03, 0x00, 0x00, 0x89, 0x43, 0x0C, 0x8B, 0x86, 0xB4, 0x03, 0x00, 0x00, 0x89, 0x43, 0x10, 0x8B, 0x8E, 0x80, 0x03, 0x00, 0x00, 0x85, 0xC9, 0x74, 0x30, 0x8B, 0x86, 0x84, 0x03, 0x00, 0x00, 0x83, 0xC0, 0xFC, 0x03, 0xC1, 0x3B, 0xC8, 0x77, 0x21, 0x81, 0x39, 0x0C, 0xB0, 0xCE, 0xFA, 0x74, 0x07,
	0x41, 0x3B, 0xC8, 0x76, 0xF3, 0xEB, 0x12, 0x89, 0x19, 0xFF, 0xB6, 0x80, 0x03, 0x00, 0x00, 0x8B, 0x86, 0xB0, 0x03, 0x00, 0x00, 0x6A, 0x00, 0xFF, 0xD0, 0x8B, 0x07, 0x85, 0xC0, 0x74, 0x11, 0x8B, 0x4F, 0x04, 0x85, 0xC9, 0x74, 0x0A, 0x89, 0x48, 0x04, 0x8B, 0x4F, 0x04, 0x8B, 0x07, 0x89, 0x01, 0x8B, 0x47, 0x10, 0x85, 0xC0, 0x74, 0x12, 0x8B, 0x4F, 0x14, 0x85, 0xC9, 0x74, 0x0B, 0x89, 0x48, 0x04, 0x8B, 0x4F, 0x14, 0x8B, 0x47, 0x10, 0x89, 0x01, 0x8B, 0x47, 0x08, 0x85, 0xC0, 0x74, 0x12, 0x8B, 0x4F, 0x0C, 0x85, 0xC9, 0x74, 0x0B, 0x89, 0x48, 0x04, 0x8B, 0x4F, 0x0C, 0x8B, 0x47, 0x08, 0x89, 0x01, 0x8B, 0x47, 0x3C, 0x85, 0xC0, 0x74, 0x12, 0x8B, 0x4F, 0x40, 0x85, 0xC9, 0x74, 0x0B, 0x89, 0x48, 0x04, 0x8B, 0x4F, 0x40, 0x8B, 0x47, 0x3C, 0x89, 0x01, 0x33, 0xC0, 0xC7, 0x45, 0x08, 0x2C, 0x00, 0x00, 0x00, 0x83, 0xBE, 0x78, 0x03, 0x00, 0x00, 0x3D, 0xBB, 0xA8, 0x00, 0x00, 0x00, 0x89, 0x45, 0xF4, 0x75, 0x55, 0x8B, 0x47, 0x50, 0x85, 0xC0, 0x74, 0x12, 0x8B, 0x4F, 0x54, 0x85, 0xC9, 0x74, 0x0B, 0x89, 0x48, 0x04, 0x8B, 0x4F, 0x54, 0x8B, 0x47, 0x50, 0x89, 0x01, 0x8B, 0x47, 0x58, 0x85, 0xC0, 0x74, 0x12, 0x8B, 0x4F, 0x5C, 0x85, 0xC9, 0x74, 0x0B, 0x89, 0x48, 0x04, 0x8B, 0x4F, 0x5C, 0x8B, 0x47, 0x58, 0x89, 0x01, 0x8B, 0x47, 0x60, 0x85, 0xC0, 0x74, 0x12, 0x8B, 0x4F, 0x64, 0x85, 0xC9, 0x74, 0x0B, 0x89, 0x48, 0x04, 0x8B, 0x4F, 0x64, 0x8B, 0x47, 0x60, 0x89, 0x01, 0xBB, 0x78, 0x00, 0x00, 0x00, 0xE9, 0x8C, 0x00, 0x00, 0x00, 0x8D, 0x47, 0x68, 0x50, 0xFF, 0xB6, 0xBC, 0x03, 0x00, 0x00, 0x8B, 0x86, 0xA8, 0x03, 0x00, 0x00, 0xFF, 0xD0, 0x8D, 0x47, 0x74, 0x50, 0xFF, 0xB6, 0xC0, 0x03, 0x00, 0x00, 0x8B, 0x86, 0xA8, 0x03, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x86, 0x78, 0x03, 0x00, 0x00, 0x83, 0xF8, 0x3E, 0x75, 0x0C, 0x8D, 0x58, 0x5A, 0xC7, 0x45, 0x08, 0x30, 0x00, 0x00, 0x00, 0xEB, 0x4B, 0x83, 0xF8, 0x3F, 0x75, 0x0C, 0x8D, 0x58, 0x61, 0xC7, 0x45, 0x08, 0x30, 0x00, 0x00, 0x00, 0xEB, 0x3A, 0x83, 0xF8, 0x64, 0x72, 0x35, 0x8B, 0x86, 0x7C, 0x03, 0x00, 0x00, 0x3D, 0x5A, 0x29, 0x00, 0x00, 0x77, 0x07, 0xBB, 0xA0, 0x00, 0x00, 0x00, 0xEB, 0x21, 0x3D, 0x39, 0x38, 0x00, 0x00, 0x77, 0x07, 0xBB, 0xA4, 0x00, 0x00, 0x00, 0xEB, 0x13, 0xC7, 0x45, 0x08, 0x2C, 0x00, 0x00, 0x00, 0x3D, 0x64, 0x4A, 0x00, 0x00, 0x76, 0x05, 0xBB, 0xB8, 0x00, 0x00, 0x00, 0x8B, 0x47, 0x50, 0x89, 0x45, 0xF4, 0x0F, 0xB7, 0x47, 0x2E, 0x50, 0xFF, 0x77, 0x30, 0x8B, 0x86, 0xA4, 0x03, 0x00, 0x00, 0xFF, 0xD0, 0x0F, 0xB7, 0x47, 0x26, 0x50, 0xFF, 0x77, 0x28, 0x8B, 0x86, 0xA4, 0x03, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x86, 0xA4, 0x03, 0x00, 0x00, 0x53, 0x57, 0xFF, 0xD0, 0x8B, 0x45, 0xF4, 0x85, 0xC0, 0x0F, 0x84, 0x7F, 0xFB, 0xFF, 0xFF, 0xFF, 0x75, 0x08, 0x50, 0x8B, 0x86, 0xA4, 0x03, 0x00, 0x00, 0xFF, 0xD0, 0x33, 0xC0, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xB8, 0x2D, 0x00, 0x00, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x5F, 0x5E, 0xB8, 0x0E, 0x00, 0x00, 0x00, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$02", read, write)
__declspec(allocate("wow64_sec$02"))inline unsigned char ManualMapping_Shell_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x56, 0x8B, 0x75, 0x08, 0x33, 0xD2, 0x8D, 0x4E, 0x18, 0x57, 0x0F, 0xB7, 0x46, 0x10, 0xD1, 0xE8, 0x89, 0x4E, 0x14, 0x66, 0x89, 0x14, 0x41, 0x8B, 0xBE, 0x7C, 0x02, 0x00, 0x00, 0x8B, 0x87, 0xD4, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x1D, 0x8B, 0x87, 0x84, 0x00, 0x00, 0x00, 0x8B, 0x00, 0x89, 0x87, 0xD4, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x0B, 0x5F, 0xB8, 0x0E, 0x00, 0x40, 0x00, 0x5E, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x87, 0x98, 0x00, 0x00, 0x00, 0x53, 0x56, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x78, 0x8B, 0x87, 0x9C, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x69, 0x8B, 0x87, 0xA0, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x5A, 0x8B, 0x87, 0xA4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x4B, 0x8B, 0x87, 0xA8, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x3C, 0x8B, 0x87, 0xAC, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x2D, 0x8B, 0x87, 0xB0, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x1E, 0x8B, 0x87, 0xB4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x75, 0x0F, 0x8B, 0x87, 0xB8, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x56, 0x85, 0xDB, 0x74, 0x11, 0x8B, 0x8F, 0xC4, 0x00, 0x00, 0x00, 0xFF, 0xD1, 0x8B, 0xC3, 0x5B, 0x5F, 0x5E, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x87, 0xBC, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x87, 0xC0, 0x00, 0x00, 0x00, 0x56, 0xFF, 0xD0, 0xFF, 0xB6, 0x5C, 0x02, 0x00, 0x00, 0x8B, 0x47, 0x08, 0xFF, 0xD0, 0x8B, 0x86, 0x54, 0x02, 0x00, 0x00, 0x5B, 0x89, 0x06, 0x33, 0xC0, 0x5F, 0x5E, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC
};

#pragma section("wow64_sec$03", read, write)
__declspec(allocate("wow64_sec$03"))inline unsigned char MMI_MapSections_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xE4, 0xF8, 0x83, 0xEC, 0x1C, 0x53, 0x56, 0x57, 0x8B, 0x7D, 0x08, 0x0F, 0x57, 0xC0, 0x66, 0x0F, 0x13, 0x44, 0x24, 0x18, 0x68, 0x10, 0x02, 0x00, 0x00, 0x6A, 0x08, 0x66, 0x8B, 0x47, 0x10, 0x8B, 0xB7, 0x7C, 0x02, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x20, 0xB8, 0x10, 0x02, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x22, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x30, 0xFF, 0xD0, 0x89, 0x44, 0x24, 0x1C, 0x85, 0xC0, 0x74, 0x5A, 0x6A, 0x08, 0x8D, 0x8F, 0x20, 0x02, 0x00, 0x00, 0x51, 0x50, 0x8B, 0x46, 0x28, 0xFF, 0xD0, 0x0F, 0xB7, 0x44, 0x24, 0x24, 0x50, 0x8D, 0x47, 0x18, 0x50, 0x8B, 0x44, 0x24, 0x30, 0x83, 0xC0, 0x08, 0x50, 0x8B, 0x46, 0x28, 0xFF, 0xD0, 0x66, 0x83, 0x44, 0x24, 0x30, 0x08, 0x83, 0xC4, 0x18, 0x8B, 0x46, 0x30, 0x6A, 0x18, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x85, 0xDB, 0x75, 0x24, 0x8B, 0x44, 0x24, 0x1C, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xB8, 0x03, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x6A, 0x20, 0x6A, 0x01, 0x8D, 0x54, 0x24, 0x28, 0xC7, 0x03, 0x18, 0x00, 0x00, 0x00, 0x52, 0x53, 0x8D, 0x44, 0x24, 0x28, 0xC7, 0x43, 0x04, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x43, 0x0C, 0x40, 0x00, 0x00, 0x00, 0x8D, 0x8F, 0x5C, 0x02, 0x00, 0x00, 0x89, 0x43, 0x08, 0x0F, 0x57, 0xC0, 0xC7, 0x43, 0x10, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x43, 0x14, 0x00, 0x00, 0x00, 0x00, 0x68, 0x89, 0x00, 0x12, 0x00, 0x66, 0x0F, 0x13, 0x44, 0x24, 0x34, 0x8B, 0x06, 0x51, 0xFF, 0xD0, 0x53, 0x89, 0x47, 0x08, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x44, 0x24, 0x1C, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x83, 0x7F, 0x08, 0x00, 0x7D, 0x0E, 0xB8, 0x02, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x46, 0x30, 0x6A, 0x18, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x85, 0xDB, 0x0F, 0x84, 0x52, 0xFF, 0xFF, 0xFF, 0x8B, 0x4E, 0x10, 0x8D, 0x44, 0x24, 0x20, 0x6A, 0x05, 0x6A, 0x18, 0x53, 0x50, 0xFF, 0xB7, 0x5C, 0x02, 0x00, 0x00, 0xFF, 0xD1, 0x89, 0x47, 0x08, 0x85, 0xC0, 0x79, 0x1C, 0x8B, 0x46, 0x34, 0x53, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xB8, 0x07, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x03, 0x8D, 0x54, 0x24, 0x10, 0x6A, 0x40, 0x68, 0x00, 0x30, 0x00, 0x00, 0x52, 0x6A, 0x00, 0x8D, 0x8F, 0x58, 0x02, 0x00, 0x00, 0x89, 0x44, 0x24, 0x20, 0x8B, 0x46, 0x14, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x89, 0x47, 0x08, 0x85, 0xC0, 0x79, 0x1C, 0x8B, 0x46, 0x34, 0x53, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xB8, 0x08, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x46, 0x30, 0x6A, 0x08, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xC8, 0x89, 0x4C, 0x24, 0x14, 0x85, 0xC9, 0x75, 0x06, 0x53, 0xE9, 0xA9, 0xFE, 0xFF, 0xFF, 0x8B, 0x46, 0x0C, 0x6A, 0x0E,
	0x6A, 0x08, 0x51, 0x8D, 0x4C, 0x24, 0x2C, 0x51, 0xFF, 0xB7, 0x5C, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0x89, 0x47, 0x08, 0x8B, 0x8E, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x56, 0x34, 0x85, 0xC0, 0x79, 0x14, 0x53, 0x6A, 0x00, 0x51, 0xFF, 0xD2, 0xB8, 0x05, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xFF, 0x74, 0x24, 0x14, 0x6A, 0x00, 0x51, 0xFF, 0xD2, 0x8B, 0x46, 0x04, 0x8D, 0x4C, 0x24, 0x20, 0x6A, 0x00, 0x6A, 0x00, 0xFF, 0x33, 0xFF, 0xB7, 0x58, 0x02, 0x00, 0x00, 0x51, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x00, 0xFF, 0xB7, 0x5C, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0x89, 0x47, 0x08, 0x8B, 0x8E, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x56, 0x34, 0x53, 0x6A, 0x00, 0x51, 0x85, 0xC0, 0x79, 0x10, 0xFF, 0xD2, 0xB8, 0x04, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xFF, 0xD2, 0x8B, 0x8F, 0x58, 0x02, 0x00, 0x00, 0x8D, 0x9F, 0x58, 0x02, 0x00, 0x00, 0x8B, 0x57, 0x04, 0x89, 0x8F, 0x60, 0x02, 0x00, 0x00, 0x8B, 0x41, 0x3C, 0x03, 0xC1, 0x89, 0x87, 0x64, 0x02, 0x00, 0x00, 0x8D, 0x48, 0x18, 0x83, 0xC0, 0x04, 0x89, 0x87, 0x6C, 0x02, 0x00, 0x00, 0x8B, 0xC2, 0x25, 0x00, 0x00, 0x20, 0x02, 0x89, 0x8F, 0x68, 0x02, 0x00, 0x00, 0x8B, 0x49, 0x38, 0x89, 0x4C, 0x24, 0x0C, 0x3D, 0x00, 0x00, 0x00, 0x02, 0x75, 0x0A, 0x0F, 0xB7, 0x47, 0x0C, 0x03, 0xC8, 0x89, 0x4C, 0x24, 0x0C, 0xF7, 0xC2, 0x00, 0x00, 0x10, 0x00, 0x74, 0x16, 0x8B, 0x87, 0x3C, 0x02, 0x00, 0x00, 0x05, 0x23, 0x10, 0x00, 0x00, 0x25, 0x00, 0xF0, 0xFF, 0xFF, 0x03, 0xC1, 0x89, 0x44, 0x24, 0x0C, 0x8B, 0x46, 0x14, 0x8D, 0x54, 0x24, 0x0C, 0x6A, 0x40, 0x68, 0x00, 0x30, 0x00, 0x00, 0x52, 0x6A, 0x00, 0x8D, 0x8F, 0x50, 0x02, 0x00, 0x00, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x89, 0x47, 0x08, 0x85, 0xC0, 0x0F, 0x88, 0xB3, 0xFE, 0xFF, 0xFF, 0x8B, 0x47, 0x04, 0x8B, 0x97, 0x50, 0x02, 0x00, 0x00, 0x25, 0x00, 0x00, 0x20, 0x02, 0x3D, 0x00, 0x00, 0x00, 0x02, 0x75, 0x08, 0x0F, 0xB7, 0x4F, 0x0C, 0x03, 0xCA, 0xEB, 0x02, 0x8B, 0xCA, 0x89, 0x8F, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x87, 0x68, 0x02, 0x00, 0x00, 0xFF, 0x70, 0x3C, 0x8B, 0x46, 0x28, 0xFF, 0x33, 0x51, 0xFF, 0xD0, 0x8B, 0x87, 0x64, 0x02, 0x00, 0x00, 0x33, 0xC9, 0x83, 0xC4, 0x0C, 0x89, 0x4C, 0x24, 0x14, 0x0F, 0xB7, 0x50, 0x14, 0x03, 0xD0, 0x8B, 0x87, 0x6C, 0x02, 0x00, 0x00, 0x66, 0x39, 0x48, 0x02, 0x74, 0x4D, 0x8D, 0x5A, 0x2C, 0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x43, 0xFC, 0x85, 0xC0, 0x74, 0x20, 0x50, 0x8B, 0x03, 0x03, 0x87, 0x58, 0x02, 0x00, 0x00, 0x50, 0x8B, 0x43, 0xF8, 0x03, 0x87, 0x54, 0x02, 0x00, 0x00, 0x50, 0x8B, 0x46, 0x28, 0xFF, 0xD0, 0x8B, 0x4C, 0x24, 0x20, 0x83, 0xC4, 0x0C, 0x8B, 0x87, 0x6C, 0x02, 0x00, 0x00, 0x41, 0x83, 0xC3, 0x28, 0x89, 0x4C, 0x24, 0x14, 0x0F, 0xB7, 0x40, 0x02, 0x3B, 0xC8, 0x75, 0xC3, 0x8D, 0x9F, 0x58, 0x02, 0x00, 0x00, 0x68, 0x00, 0x80, 0x00, 0x00, 0x8D, 0x44, 0x24, 0x14, 0xC7, 0x44, 0x24, 0x14, 0x00, 0x00, 0x00, 0x00, 0x50, 0x8B, 0x46, 0x1C, 0x53, 0x6A, 0xFF, 0xFF, 0xD0, 0x8B, 0x8F, 0x54, 0x02, 0x00, 0x00, 0xC7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x89, 0x8F, 0x60, 0x02, 0x00, 0x00, 0x03, 0x49, 0x3C, 0x89, 0x8F, 0x64, 0x02, 0x00, 0x00,
	0x8D, 0x41, 0x18, 0x89, 0x87, 0x68, 0x02, 0x00, 0x00, 0x8D, 0x41, 0x04, 0x89, 0x87, 0x6C, 0x02, 0x00, 0x00, 0x33, 0xC0, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$04", read, write)
__declspec(allocate("wow64_sec$04"))inline unsigned char MMI_RelocateImage_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x08, 0x53, 0x8B, 0x5D, 0x08, 0x57, 0x8B, 0xBB, 0x68, 0x02, 0x00, 0x00, 0x8B, 0x83, 0x54, 0x02, 0x00, 0x00, 0x8B, 0xC8, 0x89, 0x7D, 0xF8, 0x2B, 0x4F, 0x1C, 0x89, 0x4D, 0x08, 0x0F, 0x84, 0x95, 0x00, 0x00, 0x00, 0x83, 0xBF, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x75, 0x0D, 0x5F, 0xB8, 0x09, 0x00, 0x40, 0x00, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0xBF, 0x88, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x83, 0x3F, 0x00, 0x74, 0x69, 0x56, 0x0F, 0x1F, 0x40, 0x00, 0x8B, 0x77, 0x04, 0x8D, 0x47, 0x04, 0x83, 0xEE, 0x08, 0x89, 0x45, 0xFC, 0xD1, 0xEE, 0x8D, 0x57, 0x08, 0x74, 0x30, 0x0F, 0xB7, 0x02, 0x8B, 0xC8, 0x81, 0xE1, 0x00, 0xF0, 0x00, 0x00, 0x81, 0xF9, 0x00, 0x30, 0x00, 0x00, 0x8B, 0x4D, 0x08, 0x75, 0x0F, 0x25, 0xFF, 0x0F, 0x00, 0x00, 0x03, 0x83, 0x54, 0x02, 0x00, 0x00, 0x03, 0x07, 0x01, 0x08, 0x83, 0xC2, 0x02, 0x83, 0xEE, 0x01, 0x75, 0xD3, 0x8B, 0x45, 0xFC, 0x03, 0x38, 0x8B, 0x55, 0xF8, 0x8B, 0x83, 0x54, 0x02, 0x00, 0x00, 0x03, 0x82, 0x88, 0x00, 0x00, 0x00, 0x03, 0x82, 0x8C, 0x00, 0x00, 0x00, 0x3B, 0xF8, 0x73, 0x05, 0x83, 0x3F, 0x00, 0x75, 0x9D, 0x5E, 0x8B, 0x83, 0x68, 0x02, 0x00, 0x00, 0x01, 0x48, 0x1C, 0x5F, 0x33, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$05", read, write)
__declspec(allocate("wow64_sec$05"))inline unsigned char MMI_InitializeCookie_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x8B, 0x45, 0x08, 0xF7, 0x40, 0x04, 0x00, 0x00, 0x40, 0x00, 0x74, 0x55, 0x8B, 0x90, 0x68, 0x02, 0x00, 0x00, 0x83, 0xBA, 0xB4, 0x00, 0x00, 0x00, 0x00, 0x74, 0x46, 0x56, 0x8B, 0xB0, 0x54, 0x02, 0x00, 0x00, 0x8B, 0xCE, 0x81, 0xF9, 0x4E, 0xE6, 0x40, 0xBB, 0x75, 0x16, 0x8B, 0x82, 0xB0, 0x00, 0x00, 0x00, 0xB9, 0x4F, 0xE6, 0x40, 0xBB, 0x89, 0x4C, 0x30, 0x3C, 0x33, 0xC0, 0x5E, 0x5D, 0xC2, 0x04, 0x00, 0xF7, 0xC1, 0x00, 0x00, 0xFF, 0xFF, 0x75, 0x0C, 0x8B, 0xC1, 0x0D, 0x11, 0x47, 0x00, 0x00, 0xC1, 0xE0, 0x10, 0x0B, 0xC8, 0x8B, 0x82, 0xB0, 0x00, 0x00, 0x00, 0x89, 0x4C, 0x30, 0x3C, 0x5E, 0x33, 0xC0, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$06", read, write)
__declspec(allocate("wow64_sec$06"))inline unsigned char MMI_LoadImports_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xE4, 0xF8, 0x83, 0xEC, 0x2C, 0x53, 0x56, 0x8B, 0x75, 0x08, 0x57, 0xF7, 0x46, 0x04, 0x00, 0x00, 0x82, 0x00, 0x0F, 0x84, 0x48, 0x02, 0x00, 0x00, 0x8B, 0x8E, 0x68, 0x02, 0x00, 0x00, 0x8B, 0xBE, 0x7C, 0x02, 0x00, 0x00, 0x83, 0xC1, 0x68, 0x89, 0x4C, 0x24, 0x1C, 0x83, 0x79, 0x04, 0x00, 0x0F, 0x84, 0x2B, 0x02, 0x00, 0x00, 0x8B, 0x19, 0x03, 0x9E, 0x54, 0x02, 0x00, 0x00, 0x89, 0x5C, 0x24, 0x14, 0x0F, 0x84, 0x19, 0x02, 0x00, 0x00, 0x8B, 0x43, 0x0C, 0xBA, 0x08, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x0F, 0x84, 0x09, 0x02, 0x00, 0x00, 0x8B, 0x8E, 0x54, 0x02, 0x00, 0x00, 0x0F, 0x57, 0xC0, 0x52, 0x6A, 0x08, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0x03, 0xC8, 0x66, 0x0F, 0x13, 0x44, 0x24, 0x3C, 0x8B, 0x47, 0x30, 0x89, 0x4C, 0x24, 0x34, 0x66, 0x89, 0x54, 0x24, 0x3E, 0xFF, 0xD0, 0x89, 0x44, 0x24, 0x34, 0x85, 0xC0, 0x74, 0x4C, 0x8B, 0x87, 0xCC, 0x00, 0x00, 0x00, 0x8D, 0x4C, 0x24, 0x20, 0x51, 0x8D, 0x4C, 0x24, 0x34, 0xC7, 0x44, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x51, 0xFF, 0x74, 0x24, 0x30, 0x56, 0xFF, 0xD0, 0x8B, 0x4C, 0x24, 0x34, 0x89, 0x44, 0x24, 0x28, 0x85, 0xC0, 0x79, 0x2F, 0x85, 0xC9, 0x74, 0x12, 0x8B, 0x47, 0x34, 0x51, 0x6A, 0x00, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x44, 0x24, 0x28, 0x3D, 0x81, 0x04, 0x00, 0xC0, 0x0F, 0x84, 0x6C, 0x01, 0x00, 0x00, 0xB8, 0x0A, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x66, 0x83, 0x79, 0x02, 0x3A, 0x75, 0x0B, 0x0F, 0xB7, 0x44, 0x24, 0x30, 0xD1, 0xE8, 0x48, 0x8D, 0x04, 0x41, 0x8B, 0x8F, 0xD0, 0x00, 0x00, 0x00, 0x8D, 0x86, 0x70, 0x02, 0x00, 0x00, 0x50, 0x8D, 0x44, 0x24, 0x1C, 0xC7, 0x44, 0x24, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x50, 0xFF, 0x74, 0x24, 0x28, 0x8D, 0x44, 0x24, 0x3C, 0x50, 0x56, 0xFF, 0xD1, 0x89, 0x46, 0x08, 0x85, 0xC0, 0x79, 0x24, 0x8B, 0x44, 0x24, 0x34, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x47, 0x34, 0x6A, 0x00, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x81, 0x7E, 0x08, 0x81, 0x04, 0x00, 0xC0, 0x75, 0x94, 0xE9, 0xFB, 0x00, 0x00, 0x00, 0x8B, 0x96, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x4B, 0x10, 0x8B, 0x03, 0x85, 0xC0, 0x8D, 0x34, 0x11, 0x0F, 0x45, 0xC8, 0x89, 0x74, 0x24, 0x10, 0x8B, 0x75, 0x08, 0x8D, 0x04, 0x11, 0x89, 0x44, 0x24, 0x28, 0x8B, 0x00, 0x85, 0xC0, 0x0F, 0x84, 0xD0, 0x00, 0x00, 0x00, 0x8B, 0x5C, 0x24, 0x10, 0x8D, 0x4F, 0x40, 0x66, 0x0F, 0x1F, 0x44, 0x00, 0x00, 0x89, 0x4C, 0x24, 0x24, 0x85, 0xC0, 0x79, 0x17, 0x8B, 0x09, 0x53, 0x0F, 0xB7, 0xC0, 0x50, 0x6A, 0x00, 0xFF, 0x74, 0x24, 0x24, 0xFF, 0xD1, 0x89, 0x46, 0x08, 0x8D, 0x4F, 0x40, 0xEB, 0x7A, 0x8B, 0x9E, 0x54, 0x02, 0x00, 0x00, 0x6A, 0x08, 0x6A, 0x08, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0x03, 0xD8, 0x8B, 0x47, 0x30, 0xFF, 0xD0, 0x89, 0x44, 0x24, 0x2C, 0x85, 0xC0, 0x0F, 0x84, 0x15, 0xFF, 0xFF, 0xFF, 0x8D, 0x4B, 0x02, 0x8B, 0xD8, 0x0F, 0xB7, 0xD1, 0x89, 0x54, 0x24, 0x2C, 0x8B, 0xC2, 0x89, 0x4B, 0x04, 0x80, 0x39, 0x00, 0x74, 0x09, 0x41, 0x0F, 0xB7, 0xC1, 0x80, 0x39, 0x00, 0x75, 0xF7, 0x2B, 0x44, 0x24, 0x2C, 0xFF, 0x74, 0x24, 0x10, 0x66, 0x89, 0x03, 0x40, 0x66, 0x89, 0x43, 0x02, 0x8B, 0x44, 0x24,
	0x28, 0x6A, 0x00, 0x53, 0xFF, 0x74, 0x24, 0x24, 0x8B, 0x00, 0xFF, 0xD0, 0x53, 0x89, 0x46, 0x08, 0x8B, 0x47, 0x34, 0x6A, 0x00, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x4C, 0x24, 0x24, 0x8B, 0x5C, 0x24, 0x10, 0x83, 0x7E, 0x08, 0x00, 0x0F, 0x8C, 0xB4, 0xFE, 0xFF, 0xFF, 0x8B, 0x54, 0x24, 0x28, 0x83, 0xC3, 0x04, 0x83, 0xC2, 0x04, 0x89, 0x5C, 0x24, 0x10, 0x89, 0x54, 0x24, 0x28, 0x8B, 0x02, 0x85, 0xC0, 0x0F, 0x85, 0x41, 0xFF, 0xFF, 0xFF, 0x8B, 0x5C, 0x24, 0x14, 0x8B, 0x4C, 0x24, 0x1C, 0x83, 0xC3, 0x14, 0x8B, 0x86, 0x54, 0x02, 0x00, 0x00, 0x89, 0x5C, 0x24, 0x14, 0x03, 0x01, 0x03, 0x41, 0x04, 0x3B, 0xD8, 0x73, 0x07, 0x85, 0xDB, 0xE9, 0xE1, 0xFD, 0xFF, 0xFF, 0x5F, 0x5E, 0x33, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC
};

#pragma section("wow64_sec$07", read, write)
__declspec(allocate("wow64_sec$07"))inline unsigned char MMI_LoadDelayImports_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xE4, 0xF8, 0x83, 0xEC, 0x2C, 0x53, 0x8B, 0x5D, 0x08, 0x56, 0x57, 0xF7, 0x43, 0x04, 0x00, 0x00, 0x04, 0x00, 0x0F, 0x84, 0xA6, 0x02, 0x00, 0x00, 0x8B, 0x8B, 0x68, 0x02, 0x00, 0x00, 0x8B, 0xBB, 0x7C, 0x02, 0x00, 0x00, 0x81, 0xC1, 0xC8, 0x00, 0x00, 0x00, 0x89, 0x7C, 0x24, 0x18, 0x89, 0x4C, 0x24, 0x1C, 0x83, 0x79, 0x04, 0x00, 0x0F, 0x84, 0x82, 0x02, 0x00, 0x00, 0x8B, 0x31, 0x32, 0xC9, 0x03, 0xB3, 0x54, 0x02, 0x00, 0x00, 0x89, 0x74, 0x24, 0x10, 0x88, 0x4C, 0x24, 0x0F, 0x85, 0xF6, 0x0F, 0x84, 0x68, 0x02, 0x00, 0x00, 0xBA, 0x08, 0x02, 0x00, 0x00, 0x90, 0x8B, 0x46, 0x04, 0x85, 0xC0, 0x0F, 0x84, 0xA2, 0x00, 0x00, 0x00, 0x8B, 0x8B, 0x54, 0x02, 0x00, 0x00, 0x0F, 0x57, 0xC0, 0x68, 0x08, 0x02, 0x00, 0x00, 0x6A, 0x08, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0x03, 0xC8, 0x66, 0x0F, 0x13, 0x44, 0x24, 0x3C, 0x8B, 0x47, 0x30, 0x89, 0x4C, 0x24, 0x34, 0x66, 0x89, 0x54, 0x24, 0x3E, 0xFF, 0xD0, 0x89, 0x44, 0x24, 0x34, 0x85, 0xC0, 0x0F, 0x84, 0x11, 0x02, 0x00, 0x00, 0x8B, 0x87, 0xCC, 0x00, 0x00, 0x00, 0x8D, 0x4C, 0x24, 0x20, 0x51, 0x8D, 0x4C, 0x24, 0x34, 0xC7, 0x44, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x51, 0xFF, 0x74, 0x24, 0x30, 0x53, 0xFF, 0xD0, 0x8B, 0x4C, 0x24, 0x34, 0x89, 0x44, 0x24, 0x28, 0x85, 0xC0, 0x79, 0x56, 0x85, 0xC9, 0x74, 0x12, 0x8B, 0x47, 0x34, 0x51, 0x6A, 0x00, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x44, 0x24, 0x28, 0x3D, 0x81, 0x04, 0x00, 0xC0, 0x0F, 0x85, 0xC5, 0x01, 0x00, 0x00, 0x8B, 0x4C, 0x24, 0x1C, 0x83, 0xC6, 0x20, 0x8B, 0x83, 0x54, 0x02, 0x00, 0x00, 0x89, 0x74, 0x24, 0x10, 0x03, 0x01, 0x03, 0x41, 0x04, 0x3B, 0xF0, 0x0F, 0x82, 0x95, 0x01, 0x00, 0x00, 0x33, 0xC0, 0xBA, 0x0B, 0x00, 0x40, 0x00, 0x38, 0x44, 0x24, 0x0F, 0x0F, 0x45, 0xC2, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x66, 0x83, 0x79, 0x02, 0x3A, 0x75, 0x0B, 0x0F, 0xB7, 0x44, 0x24, 0x30, 0xD1, 0xE8, 0x48, 0x8D, 0x04, 0x41, 0x8B, 0x8F, 0xD0, 0x00, 0x00, 0x00, 0x8D, 0x83, 0x70, 0x02, 0x00, 0x00, 0x50, 0x8D, 0x44, 0x24, 0x18, 0xC7, 0x44, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00, 0x50, 0xFF, 0x74, 0x24, 0x28, 0x8D, 0x44, 0x24, 0x3C, 0x50, 0x53, 0xFF, 0xD1, 0x89, 0x43, 0x08, 0x85, 0xC0, 0x8B, 0x44, 0x24, 0x34, 0x79, 0x1E, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x47, 0x34, 0x6A, 0x00, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x81, 0x7B, 0x08, 0x81, 0x04, 0x00, 0xC0, 0xE9, 0x64, 0xFF, 0xFF, 0xFF, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x47, 0x34, 0x6A, 0x00, 0xFF, 0xB7, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x56, 0x08, 0x85, 0xD2, 0x74, 0x0D, 0x8B, 0x8B, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x44, 0x24, 0x14, 0x89, 0x04, 0x0A, 0x8B, 0x4C, 0x24, 0x10, 0x8B, 0x83, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x76, 0x0C, 0x03, 0xF0, 0x8B, 0x79, 0x10, 0x03, 0xF8, 0x89, 0x7C, 0x24, 0x28, 0x83, 0x3E, 0x00, 0x0F, 0x84, 0xB0, 0x00, 0x00, 0x00, 0x8B, 0x4C, 0x24, 0x18, 0x8D, 0x51, 0x40, 0x8B, 0x07, 0x89, 0x54, 0x24, 0x24, 0x85, 0xC0, 0x79, 0x18, 0x8B, 0x0A, 0x56, 0x0F, 0xB7, 0xC0, 0x50, 0x6A, 0x00, 0xFF, 0x74, 0x24, 0x20, 0xFF, 0xD1, 0x8B, 0x4C, 0x24, 0x18, 0x8D, 0x51, 0x40, 0xEB,
	0x66, 0x8B, 0xBB, 0x54, 0x02, 0x00, 0x00, 0x6A, 0x08, 0x6A, 0x08, 0xFF, 0xB1, 0xD4, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x8B, 0x41, 0x30, 0xFF, 0xD0, 0x89, 0x44, 0x24, 0x2C, 0x85, 0xC0, 0x74, 0x63, 0x8D, 0x4F, 0x02, 0x89, 0x48, 0x04, 0x80, 0x39, 0x00, 0x0F, 0xB7, 0xD1, 0x8B, 0xFA, 0x8B, 0xC2, 0x74, 0x09, 0x41, 0x0F, 0xB7, 0xC1, 0x80, 0x39, 0x00, 0x75, 0xF7, 0x8B, 0x54, 0x24, 0x2C, 0x2B, 0xC7, 0x8B, 0x7C, 0x24, 0x28, 0x8B, 0x4C, 0x24, 0x24, 0x56, 0x66, 0x89, 0x02, 0x40, 0x66, 0x89, 0x42, 0x02, 0x0F, 0xB7, 0x07, 0x8B, 0x09, 0x50, 0x52, 0xFF, 0x74, 0x24, 0x20, 0xFF, 0xD1, 0x8B, 0x4C, 0x24, 0x18, 0x8B, 0x54, 0x24, 0x24, 0x89, 0x43, 0x08, 0x85, 0xC0, 0x78, 0x15, 0x83, 0xC6, 0x04, 0x83, 0xC7, 0x04, 0x89, 0x7C, 0x24, 0x28, 0x83, 0x3E, 0x00, 0x0F, 0x85, 0x5E, 0xFF, 0xFF, 0xFF, 0xEB, 0x05, 0xC6, 0x44, 0x24, 0x0F, 0x01, 0x8B, 0x4C, 0x24, 0x1C, 0x8B, 0x83, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x74, 0x24, 0x10, 0x83, 0xC6, 0x20, 0x03, 0x01, 0x03, 0x41, 0x04, 0x89, 0x74, 0x24, 0x10, 0x3B, 0xF0, 0x0F, 0x83, 0x6F, 0xFE, 0xFF, 0xFF, 0x8B, 0x7C, 0x24, 0x18, 0xBA, 0x08, 0x02, 0x00, 0x00, 0x85, 0xF6, 0x0F, 0x85, 0xB1, 0xFD, 0xFF, 0xFF, 0xE9, 0x59, 0xFE, 0xFF, 0xFF, 0xB8, 0x0B, 0x00, 0x40, 0x00, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x5F, 0x5E, 0x33, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$08", read, write)
__declspec(allocate("wow64_sec$08"))inline unsigned char MMI_SetPageProtections_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0x57, 0x8B, 0x7D, 0x08, 0xF7, 0x47, 0x04, 0x00, 0x00, 0x20, 0x00, 0x0F, 0x84, 0x17, 0x01, 0x00, 0x00, 0x8B, 0x8F, 0x7C, 0x02, 0x00, 0x00, 0x8D, 0x55, 0x08, 0x8B, 0x87, 0x68, 0x02, 0x00, 0x00, 0x52, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x8D, 0x55, 0xFC, 0x6A, 0x20, 0x8B, 0x40, 0x3C, 0x89, 0x45, 0xFC, 0x8B, 0x41, 0x18, 0x89, 0x4D, 0xF8, 0x8D, 0x8F, 0x54, 0x02, 0x00, 0x00, 0x52, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x89, 0x47, 0x08, 0x85, 0xC0, 0x0F, 0x88, 0xCC, 0x00, 0x00, 0x00, 0x8B, 0x87, 0x64, 0x02, 0x00, 0x00, 0x53, 0x56, 0x33, 0xDB, 0x0F, 0xB7, 0x70, 0x14, 0x03, 0xF0, 0x8B, 0x87, 0x6C, 0x02, 0x00, 0x00, 0x66, 0x39, 0x58, 0x02, 0x0F, 0x84, 0x96, 0x00, 0x00, 0x00, 0x83, 0xC6, 0x3C, 0x8D, 0x53, 0x02, 0x0F, 0x1F, 0x40, 0x00, 0x8B, 0x46, 0xE8, 0x03, 0x87, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x4E, 0xEC, 0x89, 0x45, 0xF0, 0x8B, 0x06, 0x89, 0x4D, 0xF4, 0x85, 0xC9, 0x74, 0x5E, 0xA9, 0x00, 0x00, 0x00, 0x20, 0x74, 0x1C, 0x85, 0xC0, 0x79, 0x07, 0xB8, 0x40, 0x00, 0x00, 0x00, 0xEB, 0x29, 0x25, 0x00, 0x00, 0x00, 0x40, 0xF7, 0xD8, 0x1B, 0xC0, 0x83, 0xE0, 0x10, 0x83, 0xC0, 0x10, 0xEB, 0x18, 0x85, 0xC0, 0x79, 0x07, 0xB8, 0x04, 0x00, 0x00, 0x00, 0xEB, 0x0D, 0xA9, 0x00, 0x00, 0x00, 0x40, 0xB8, 0x01, 0x00, 0x00, 0x00, 0x0F, 0x45, 0xC2, 0x8B, 0x4D, 0xF8, 0x8D, 0x55, 0x08, 0x52, 0x50, 0x8D, 0x45, 0xF4, 0x8B, 0x49, 0x18, 0x50, 0x8D, 0x45, 0xF0, 0x50, 0x6A, 0xFF, 0xFF, 0xD1, 0x89, 0x47, 0x08, 0x85, 0xC0, 0x78, 0x1B, 0xBA, 0x02, 0x00, 0x00, 0x00, 0x8B, 0x87, 0x6C, 0x02, 0x00, 0x00, 0x43, 0x83, 0xC6, 0x28, 0x0F, 0xB7, 0x40, 0x02, 0x3B, 0xD8, 0x0F, 0x85, 0x74, 0xFF, 0xFF, 0xFF, 0x33, 0xC0, 0xB9, 0x06, 0x00, 0x40, 0x00, 0x39, 0x47, 0x08, 0x5E, 0x5B, 0x0F, 0x4C, 0xC1, 0x5F, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xB8, 0x06, 0x00, 0x40, 0x00, 0x5F, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x33, 0xC0, 0x5F, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$09", read, write)
__declspec(allocate("wow64_sec$09"))inline unsigned char MMI_EnableExceptions_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x0C, 0x56, 0x8B, 0x75, 0x08, 0xF7, 0x46, 0x04, 0x00, 0x00, 0x10, 0x00, 0x0F, 0x84, 0x4B, 0x02, 0x00, 0x00, 0x8B, 0x86, 0x68, 0x02, 0x00, 0x00, 0x8B, 0x96, 0x54, 0x02, 0x00, 0x00, 0x57, 0x8B, 0xBE, 0x7C, 0x02, 0x00, 0x00, 0x8B, 0x48, 0x38, 0x8B, 0x86, 0x3C, 0x02, 0x00, 0x00, 0x03, 0xCA, 0x83, 0xC0, 0x0F, 0x89, 0x8E, 0x44, 0x02, 0x00, 0x00, 0x03, 0xC1, 0x89, 0x7D, 0xFC, 0x83, 0xE0, 0xF0, 0x89, 0x86, 0x48, 0x02, 0x00, 0x00, 0x89, 0x10, 0x8B, 0x86, 0x68, 0x02, 0x00, 0x00, 0x8B, 0x8E, 0x48, 0x02, 0x00, 0x00, 0x8B, 0x40, 0x38, 0x89, 0x41, 0x04, 0x8B, 0x8E, 0x48, 0x02, 0x00, 0x00, 0x8B, 0x86, 0x30, 0x02, 0x00, 0x00, 0x89, 0x41, 0x08, 0x8B, 0x8E, 0x48, 0x02, 0x00, 0x00, 0x8B, 0x87, 0x88, 0x00, 0x00, 0x00, 0x89, 0x41, 0x0C, 0x8B, 0x8E, 0x48, 0x02, 0x00, 0x00, 0x8B, 0x47, 0x70, 0x89, 0x41, 0x10, 0xFF, 0xB6, 0x3C, 0x02, 0x00, 0x00, 0x8B, 0x47, 0x28, 0xFF, 0xB6, 0x38, 0x02, 0x00, 0x00, 0xFF, 0xB6, 0x44, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x8E, 0x44, 0x02, 0x00, 0x00, 0x83, 0xC4, 0x0C, 0x8B, 0x96, 0x48, 0x02, 0x00, 0x00, 0x85, 0xC9, 0x74, 0x1C, 0x8B, 0x86, 0x3C, 0x02, 0x00, 0x00, 0x83, 0xC0, 0xFC, 0x03, 0xC1, 0x3B, 0xC8, 0x77, 0x0D, 0x81, 0x39, 0x0C, 0xB0, 0xCE, 0xFA, 0x74, 0x2A, 0x41, 0x3B, 0xC8, 0x76, 0xF3, 0xC6, 0x45, 0x0B, 0x00, 0x8B, 0x86, 0x30, 0x02, 0x00, 0x00, 0x83, 0xF8, 0x3F, 0x72, 0x1E, 0x8B, 0x96, 0x68, 0x02, 0x00, 0x00, 0x8B, 0x8E, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x47, 0x60, 0x8B, 0x52, 0x38, 0xFF, 0xD0, 0xEB, 0x42, 0x89, 0x11, 0xC6, 0x45, 0x0B, 0x01, 0xEB, 0xD7, 0x83, 0xF8, 0x3E, 0x75, 0x16, 0x8B, 0x86, 0x68, 0x02, 0x00, 0x00, 0xFF, 0x70, 0x38, 0x8B, 0x47, 0x60, 0xFF, 0xB6, 0x54, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0xEB, 0x1F, 0x83, 0xF8, 0x3D, 0x75, 0x1A, 0x8B, 0x86, 0x68, 0x02, 0x00, 0x00, 0xFF, 0x70, 0x38, 0x8B, 0x47, 0x60, 0xFF, 0xB6, 0x54, 0x02, 0x00, 0x00, 0xFF, 0xB7, 0x88, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xC7, 0x46, 0x08, 0x35, 0x01, 0x00, 0xC0, 0x33, 0xC0, 0x8B, 0x8F, 0x88, 0x00, 0x00, 0x00, 0x8B, 0x09, 0x85, 0xC9, 0x0F, 0x84, 0xFD, 0x00, 0x00, 0x00, 0x83, 0xBE, 0x30, 0x02, 0x00, 0x00, 0x3E, 0x8B, 0x96, 0x54, 0x02, 0x00, 0x00, 0x53, 0x1B, 0xDB, 0x83, 0xE3, 0xFC, 0x83, 0xC3, 0x10, 0x03, 0x9F, 0x88, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x40, 0x00, 0x39, 0x53, 0x04, 0x74, 0x1E, 0x40, 0x83, 0xC3, 0x10, 0x3B, 0xC1, 0x72, 0xF3, 0x33, 0xC0, 0xB9, 0x0C, 0x00, 0x40, 0x00, 0x39, 0x46, 0x08, 0x5B, 0x5F, 0x0F, 0x4C, 0xC1, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x83, 0x7B, 0x0C, 0x00, 0x74, 0x1D, 0x33, 0xC0, 0xC7, 0x46, 0x08, 0x00, 0x00, 0x00, 0x00, 0x39, 0x46, 0x08, 0xB9, 0x0C, 0x00, 0x40, 0x00, 0x5B, 0x5F, 0x0F, 0x4C, 0xC1, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x47, 0x14, 0x8D, 0x55, 0xF8, 0x6A, 0x04, 0x68, 0x00, 0x30, 0x00, 0x00, 0x52, 0x6A, 0x00, 0x8D, 0x8E, 0x4C, 0x02, 0x00, 0x00, 0xC7, 0x45, 0xF8, 0x00, 0x20, 0x00, 0x00, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x89, 0x46, 0x08, 0x85, 0xC0, 0x78, 0x6D, 0xA1, 0x30, 0x03, 0xFE, 0x7F, 0x8B, 0xF8, 0x8B, 0x96, 0x4C, 0x02, 0x00, 0x00, 0x83, 0xE7, 0x1F, 0x33, 0xD0, 0x8B, 0xCF, 0xF7,
	0xD9, 0x8B, 0xC2, 0xD3, 0xE0, 0x8B, 0xCF, 0x8B, 0x7D, 0xFC, 0xD3, 0xEA, 0x0B, 0xC2, 0x83, 0xBE, 0x30, 0x02, 0x00, 0x00, 0x3F, 0x89, 0x45, 0xF4, 0x72, 0x0A, 0x8B, 0x47, 0x70, 0x6A, 0x00, 0xFF, 0xD0, 0x8B, 0x45, 0xF4, 0x89, 0x03, 0x83, 0xBE, 0x30, 0x02, 0x00, 0x00, 0x3F, 0x72, 0x07, 0x8B, 0x47, 0x70, 0x6A, 0x01, 0xFF, 0xD0, 0x80, 0x7D, 0x0B, 0x00, 0x74, 0x1C, 0x83, 0xBE, 0x40, 0x02, 0x00, 0x00, 0x00, 0x75, 0x13, 0xFF, 0xB6, 0x44, 0x02, 0x00, 0x00, 0x8B, 0x47, 0x74, 0x6A, 0x00, 0xFF, 0xD0, 0x89, 0x86, 0x40, 0x02, 0x00, 0x00, 0x5B, 0x33, 0xC0, 0xB9, 0x0C, 0x00, 0x40, 0x00, 0x39, 0x46, 0x08, 0x5F, 0x0F, 0x4C, 0xC1, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x33, 0xC0, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$0A", read, write)
__declspec(allocate("wow64_sec$0A"))inline unsigned char MMI_HandleTLS_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x51, 0x57, 0x8B, 0x7D, 0x08, 0xF7, 0x47, 0x04, 0x00, 0x00, 0x08, 0x00, 0x0F, 0x84, 0xCE, 0x00, 0x00, 0x00, 0x8B, 0x87, 0x68, 0x02, 0x00, 0x00, 0x83, 0xB8, 0xAC, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x84, 0xBB, 0x00, 0x00, 0x00, 0x8B, 0x80, 0xA8, 0x00, 0x00, 0x00, 0x03, 0x87, 0x54, 0x02, 0x00, 0x00, 0x53, 0x56, 0x8B, 0xB7, 0x7C, 0x02, 0x00, 0x00, 0x68, 0xA8, 0x00, 0x00, 0x00, 0x6A, 0x08, 0x89, 0x45, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x30, 0x89, 0x75, 0xFC, 0xFF, 0xD0, 0x8B, 0xD8, 0x85, 0xDB, 0x75, 0x0E, 0x5E, 0x5B, 0xB8, 0x03, 0x00, 0x40, 0x00, 0x5F, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x87, 0x54, 0x02, 0x00, 0x00, 0x89, 0x43, 0x18, 0x83, 0xBF, 0x30, 0x02, 0x00, 0x00, 0x3E, 0x8B, 0x46, 0x64, 0x77, 0x05, 0x53, 0xFF, 0xD0, 0xEB, 0x04, 0x8B, 0xCB, 0xFF, 0xD0, 0x8B, 0x75, 0x08, 0x8B, 0x76, 0x0C, 0x85, 0xF6, 0x74, 0x17, 0x8B, 0x06, 0x85, 0xC0, 0x74, 0x11, 0x6A, 0x00, 0x6A, 0x01, 0xFF, 0xB7, 0x54, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0x83, 0xC6, 0x04, 0x75, 0xE9, 0x8B, 0x55, 0xFC, 0x8B, 0x8A, 0x90, 0x00, 0x00, 0x00, 0x8B, 0x01, 0x3B, 0xC1, 0x74, 0x14, 0x39, 0x58, 0x20, 0x74, 0x08, 0x8B, 0x00, 0x3B, 0xC1, 0x75, 0xF5, 0xEB, 0x07, 0xC7, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x42, 0x34, 0x53, 0x6A, 0x00, 0xFF, 0xB2, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x5E, 0x5B, 0x33, 0xC0, 0x5F, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x33, 0xC0, 0x5F, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$0B", read, write)
__declspec(allocate("wow64_sec$0B"))inline unsigned char MMI_ExecuteDllMain_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x51, 0x56, 0x8B, 0x75, 0x08, 0x8B, 0x4E, 0x04, 0xF7, 0xC1, 0x00, 0x00, 0x80, 0x00, 0x0F, 0x84, 0x8A, 0x00, 0x00, 0x00, 0x8B, 0x86, 0x68, 0x02, 0x00, 0x00, 0x57, 0x8B, 0xBE, 0x7C, 0x02, 0x00, 0x00, 0x83, 0x78, 0x10, 0x00, 0x74, 0x6D, 0x53, 0x32, 0xDB, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0xF7, 0xC1, 0x00, 0x00, 0x00, 0x01, 0x74, 0x1A, 0x8B, 0x47, 0x68, 0x8D, 0x4D, 0x08, 0x51, 0x8D, 0x4D, 0xFC, 0x51, 0x6A, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x89, 0x5E, 0x08, 0xC1, 0xEB, 0x1F, 0x80, 0xF3, 0x01, 0x8B, 0x86, 0x68, 0x02, 0x00, 0x00, 0x8B, 0x8E, 0x54, 0x02, 0x00, 0x00, 0x6A, 0x00, 0x6A, 0x01, 0x8B, 0x40, 0x10, 0x51, 0x03, 0xC1, 0xFF, 0xD0, 0xF7, 0x46, 0x04, 0x00, 0x00, 0x00, 0x01, 0x74, 0x0E, 0x84, 0xDB, 0x74, 0x0A, 0xFF, 0x75, 0x08, 0x8B, 0x47, 0x6C, 0x6A, 0x00, 0xFF, 0xD0, 0x5B, 0x5F, 0x33, 0xC0, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x5F, 0x33, 0xC0, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x33, 0xC0, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$0C", read, write)
__declspec(allocate("wow64_sec$0C"))inline unsigned char MMI_CleanDataDirectories_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x8B, 0x55, 0x08, 0x83, 0xEC, 0x10, 0x8B, 0x42, 0x04, 0x25, 0x00, 0x00, 0x21, 0x00, 0x3D, 0x00, 0x00, 0x01, 0x00, 0x0F, 0x85, 0xE1, 0x02, 0x00, 0x00, 0x8B, 0x82, 0x7C, 0x02, 0x00, 0x00, 0x53, 0x56, 0x8B, 0xB2, 0x68, 0x02, 0x00, 0x00, 0x57, 0x8D, 0xBA, 0x54, 0x02, 0x00, 0x00, 0x89, 0x45, 0xF4, 0x89, 0x7D, 0xFC, 0x83, 0x7E, 0x6C, 0x00, 0x0F, 0x84, 0x8F, 0x00, 0x00, 0x00, 0x8B, 0x76, 0x68, 0x03, 0x37, 0x83, 0x7E, 0x0C, 0x00, 0x74, 0x68, 0x0F, 0x1F, 0x40, 0x00, 0x8B, 0x07, 0x03, 0x46, 0x0C, 0x80, 0x38, 0x00, 0x74, 0x04, 0xC6, 0x40, 0x01, 0x00, 0x8B, 0x06, 0xC7, 0x46, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x0F, 0x85, 0xC0, 0x75, 0x03, 0x8B, 0x46, 0x10, 0x8D, 0x14, 0x01, 0x8B, 0x0A, 0x85, 0xC9, 0x74, 0x22, 0x79, 0x08, 0xC7, 0x02, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x0E, 0x8B, 0x07, 0x80, 0x7C, 0x08, 0x02, 0x00, 0x74, 0x05, 0xC6, 0x44, 0x08, 0x03, 0x00, 0x8B, 0x4A, 0x04, 0x83, 0xC2, 0x04, 0x85, 0xC9, 0x75, 0xDE, 0xC7, 0x06, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x46, 0x10, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC6, 0x14, 0x83, 0x7E, 0x0C, 0x00, 0x75, 0x9F, 0x8B, 0x55, 0x08, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x40, 0x68, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x40, 0x6C, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x03, 0x89, 0x7D, 0xFC, 0x8B, 0x9A, 0x68, 0x02, 0x00, 0x00, 0x83, 0xBB, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x84, 0xD5, 0x00, 0x00, 0x00, 0xF7, 0x42, 0x04, 0x00, 0x00, 0x04, 0x00, 0x0F, 0x85, 0xC8, 0x00, 0x00, 0x00, 0x8B, 0x9B, 0xC8, 0x00, 0x00, 0x00, 0x03, 0x1F, 0x83, 0x7B, 0x04, 0x00, 0x0F, 0x84, 0x96, 0x00, 0x00, 0x00, 0x83, 0xC3, 0x0C, 0x89, 0x5D, 0xF8, 0x0F, 0x1F, 0x44, 0x00, 0x00, 0x8B, 0x43, 0xF8, 0x03, 0x07, 0x80, 0x38, 0x00, 0x74, 0x04, 0xC6, 0x40, 0x01, 0x00, 0x8B, 0x43, 0x04, 0xC7, 0x43, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x43, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x0F, 0x03, 0xC1, 0x8B, 0x3B, 0x03, 0xF9, 0x83, 0x3F, 0x00, 0x74, 0x3C, 0x8B, 0x5D, 0xFC, 0x90, 0x8B, 0x10, 0x85, 0xD2, 0x79, 0x08, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x1C, 0x8B, 0x33, 0x03, 0xF2, 0xC7, 0x45, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x8A, 0x4E, 0x02, 0x84, 0xC9, 0x0F, 0xB6, 0xD1, 0x0F, 0x45, 0x55, 0xF0, 0xFE, 0xC2, 0x88, 0x56, 0x02, 0x83, 0xC7, 0x04, 0x83, 0xC0, 0x04, 0x83, 0x3F, 0x00, 0x75, 0xCB, 0x8B, 0x5D, 0xF8, 0x8B, 0x7D, 0xFC, 0xC7, 0x03, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x43, 0x04, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC3, 0x20, 0x89, 0x5D, 0xF8, 0x83, 0x7B, 0xF8, 0x00, 0x0F, 0x85, 0x78, 0xFF, 0xFF, 0xFF, 0x8B, 0x55, 0x08, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0xB2, 0x68, 0x02, 0x00, 0x00, 0x83, 0xBE, 0x94, 0x00, 0x00, 0x00, 0x00, 0x74, 0x51, 0x8B, 0xB6, 0x90, 0x00, 0x00, 0x00, 0x03, 0x37, 0x8B, 0x46, 0x14, 0x03, 0x07, 0xFF, 0x76, 0x10, 0x50, 0x8B, 0x45, 0xF4, 0x8B, 0x40, 0x2C, 0xFF, 0xD0, 0x8B, 0x55, 0x08, 0xC7, 0x46, 0x10, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x46, 0x14, 0x00, 0x00, 0x00, 0x00,
	0xC7, 0x46, 0x18, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0xBA, 0x68, 0x02, 0x00, 0x00, 0x8B, 0x5D, 0xFC, 0x83, 0xBF, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x74, 0x51, 0x8B, 0xBF, 0x88, 0x00, 0x00, 0x00, 0x03, 0x3B, 0x83, 0x3F, 0x00, 0x74, 0x24, 0x8B, 0x5D, 0xF4, 0x0F, 0x1F, 0x00, 0x8B, 0x47, 0x04, 0x83, 0xE8, 0x08, 0x50, 0x8D, 0x47, 0x08, 0x50, 0x8B, 0x43, 0x2C, 0xFF, 0xD0, 0x03, 0x7F, 0x04, 0x83, 0x3F, 0x00, 0x75, 0xE8, 0x8B, 0x5D, 0xFC, 0x8B, 0x55, 0x08, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x8A, 0x68, 0x02, 0x00, 0x00, 0x83, 0xB9, 0xAC, 0x00, 0x00, 0x00, 0x00, 0x74, 0x65, 0x8B, 0x89, 0xA8, 0x00, 0x00, 0x00, 0x03, 0x0B, 0x8B, 0x41, 0x0C, 0x85, 0xC0, 0x74, 0x14, 0x0F, 0x1F, 0x40, 0x00, 0x83, 0x38, 0x00, 0x74, 0x0B, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0x75, 0xF0, 0xC7, 0x41, 0x0C, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x41, 0x08, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x41, 0x04, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x41, 0x10, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x82, 0x68, 0x02, 0x00, 0x00, 0xC7, 0x80, 0xAC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x5E, 0x33, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x33, 0xC0, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$0D", read, write)
__declspec(allocate("wow64_sec$0D"))inline unsigned char MMI_CloakHeader_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x10, 0x53, 0x57, 0x8B, 0x7D, 0x08, 0x8B, 0x4F, 0x04, 0xF6, 0xC1, 0x03, 0x0F, 0x84, 0x30, 0x01, 0x00, 0x00, 0x8B, 0x87, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x97, 0x7C, 0x02, 0x00, 0x00, 0x89, 0x45, 0xF4, 0x8B, 0x87, 0x68, 0x02, 0x00, 0x00, 0x89, 0x55, 0xF8, 0x8D, 0x5A, 0x18, 0x8B, 0x40, 0x3C, 0x89, 0x45, 0x08, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xF7, 0xC1, 0x00, 0x00, 0x20, 0x00, 0x74, 0x21, 0x8B, 0x03, 0x8D, 0x4D, 0xFC, 0x51, 0x6A, 0x40, 0x8D, 0x4D, 0x08, 0x51, 0x8D, 0x4D, 0xF4, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x89, 0x47, 0x08, 0x85, 0xC0, 0x78, 0x55, 0x8B, 0x45, 0x08, 0x8B, 0x55, 0xF8, 0x8B, 0x4F, 0x04, 0xF6, 0xC1, 0x01, 0x74, 0x54, 0x50, 0xFF, 0xB7, 0x54, 0x02, 0x00, 0x00, 0x8B, 0x42, 0x2C, 0xFF, 0xD0, 0xF7, 0x47, 0x04, 0x00, 0x00, 0x20, 0x00, 0x0F, 0x84, 0xBE, 0x00, 0x00, 0x00, 0x8B, 0x03, 0x8D, 0x4D, 0xFC, 0x51, 0xFF, 0x75, 0xFC, 0x8D, 0x4D, 0x08, 0x51, 0x8D, 0x4D, 0xF4, 0x51, 0x6A, 0xFF, 0xFF, 0xD0, 0x33, 0xC9, 0x89, 0x47, 0x08, 0x85, 0xC0, 0xBA, 0x06, 0x00, 0x40, 0x00, 0x5F, 0x0F, 0x48, 0xCA, 0x8B, 0xC1, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x5F, 0xB8, 0x06, 0x00, 0x40, 0x00, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xF6, 0xC1, 0x02, 0x74, 0xB3, 0x64, 0xA1, 0x30, 0x00, 0x00, 0x00, 0x85, 0xC0, 0x75, 0x0D, 0x5F, 0xB8, 0x0F, 0x00, 0x40, 0x00, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x8B, 0x40, 0x0C, 0x85, 0xC0, 0x74, 0x53, 0x8B, 0x40, 0x0C, 0x85, 0xC0, 0x74, 0x4C, 0x8B, 0x00, 0x89, 0x45, 0xF0, 0x85, 0xC0, 0x74, 0x43, 0x8B, 0x40, 0x18, 0x85, 0xC0, 0x74, 0x3C, 0x56, 0x8B, 0x70, 0x3C, 0xFF, 0x75, 0x08, 0x03, 0xF0, 0x8B, 0x42, 0x2C, 0xFF, 0xB7, 0x54, 0x02, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x45, 0xF8, 0x8B, 0x4D, 0x08, 0x39, 0x4E, 0x54, 0x8B, 0x50, 0x28, 0x8B, 0x45, 0xF0, 0x0F, 0x42, 0x4E, 0x54, 0x51, 0xFF, 0x70, 0x18, 0xFF, 0xB7, 0x54, 0x02, 0x00, 0x00, 0xFF, 0xD2, 0x83, 0xC4, 0x0C, 0x5E, 0xE9, 0x42, 0xFF, 0xFF, 0xFF, 0x5F, 0xB8, 0x10, 0x00, 0x40, 0x00, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0x5F, 0x33, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$0E", read, write)
__declspec(allocate("wow64_sec$0E"))inline unsigned char MMI_CleanUp_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x51, 0x56, 0x57, 0x8B, 0x7D, 0x08, 0x83, 0xBF, 0x4C, 0x02, 0x00, 0x00, 0x00, 0x8D, 0x87, 0x4C, 0x02, 0x00, 0x00, 0x8B, 0xB7, 0x7C, 0x02, 0x00, 0x00, 0x74, 0x18, 0x68, 0x00, 0x80, 0x00, 0x00, 0x8D, 0x4D, 0xFC, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x51, 0x50, 0x8B, 0x46, 0x1C, 0x6A, 0xFF, 0xFF, 0xD0, 0x8B, 0x87, 0x40, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x06, 0x50, 0x8B, 0x46, 0x78, 0xFF, 0xD0, 0x8B, 0x97, 0x78, 0x02, 0x00, 0x00, 0x85, 0xD2, 0x74, 0x1D, 0x8B, 0x0A, 0x8B, 0x42, 0x04, 0x52, 0x6A, 0x00, 0x89, 0x41, 0x04, 0x8B, 0x4A, 0x04, 0x8B, 0x02, 0x89, 0x01, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x34, 0xFF, 0xD0, 0x8B, 0x87, 0x74, 0x02, 0x00, 0x00, 0x89, 0x45, 0xFC, 0x53, 0x85, 0xC0, 0x74, 0x3B, 0x8B, 0x58, 0x04, 0x8B, 0x46, 0x44, 0xFF, 0x73, 0x08, 0xFF, 0xD0, 0x3B, 0x5D, 0xFC, 0x74, 0x2B, 0x8B, 0x7D, 0xFC, 0x66, 0x90, 0x8B, 0x43, 0x04, 0x53, 0x89, 0x47, 0x04, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x5F, 0x04, 0x8B, 0x46, 0x44, 0xFF, 0x73, 0x08, 0xFF, 0xD0, 0x3B, 0xDF, 0x75, 0xDD, 0x8B, 0x7D, 0x08, 0x8B, 0x87, 0x70, 0x02, 0x00, 0x00, 0x89, 0x45, 0xFC, 0x85, 0xC0, 0x74, 0x39, 0x8B, 0x58, 0x04, 0x8B, 0x46, 0x44, 0xFF, 0x73, 0x08, 0xFF, 0xD0, 0x3B, 0x5D, 0xFC, 0x74, 0x29, 0x8B, 0x7D, 0xFC, 0x8B, 0x43, 0x04, 0x53, 0x89, 0x47, 0x04, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x5F, 0x04, 0x8B, 0x46, 0x44, 0xFF, 0x73, 0x08, 0xFF, 0xD0, 0x3B, 0xDF, 0x75, 0xDD, 0x8B, 0x7D, 0x08, 0x83, 0xBF, 0x50, 0x02, 0x00, 0x00, 0x00, 0x8D, 0x87, 0x50, 0x02, 0x00, 0x00, 0x5B, 0x74, 0x18, 0x68, 0x00, 0x80, 0x00, 0x00, 0x8D, 0x4D, 0x08, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x51, 0x50, 0x8B, 0x46, 0x1C, 0x6A, 0xFF, 0xFF, 0xD0, 0x83, 0xBF, 0x58, 0x02, 0x00, 0x00, 0x00, 0x8D, 0x87, 0x58, 0x02, 0x00, 0x00, 0x74, 0x18, 0x68, 0x00, 0x80, 0x00, 0x00, 0x8D, 0x4D, 0x08, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0x51, 0x50, 0x8B, 0x46, 0x1C, 0x6A, 0xFF, 0xFF, 0xD0, 0x8B, 0x87, 0x5C, 0x02, 0x00, 0x00, 0x85, 0xC0, 0x74, 0x06, 0x50, 0x8B, 0x46, 0x08, 0xFF, 0xD0, 0x5F, 0x33, 0xC0, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$0F", read, write)
__declspec(allocate("wow64_sec$0F"))inline unsigned char MMIH_ResolveFilePath_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xE4, 0xF8, 0x83, 0xEC, 0x44, 0x8B, 0x4D, 0x0C, 0x8B, 0x45, 0x08, 0x53, 0x56, 0x8B, 0x49, 0x04, 0x8B, 0xB0, 0x7C, 0x02, 0x00, 0x00, 0x57, 0xC7, 0x44, 0x24, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x66, 0x83, 0x79, 0x02, 0x3A, 0x75, 0x0B, 0x33, 0xC0, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x08, 0x00, 0x83, 0xB8, 0x30, 0x02, 0x00, 0x00, 0x3D, 0xC7, 0x44, 0x24, 0x14, 0x00, 0x00, 0x00, 0x00, 0x77, 0x0F, 0x8B, 0x86, 0x8C, 0x00, 0x00, 0x00, 0x8B, 0x48, 0x04, 0x89, 0x4C, 0x24, 0x14, 0xEB, 0x2C, 0x8B, 0x46, 0x58, 0x8D, 0x54, 0x24, 0x3C, 0x52, 0x8D, 0x54, 0x24, 0x18, 0xC7, 0x44, 0x24, 0x40, 0x00, 0x00, 0x00, 0x00, 0x52, 0x6A, 0x00, 0x51, 0xFF, 0xD0, 0x8B, 0xD0, 0x89, 0x54, 0x24, 0x2C, 0x85, 0xD2, 0x0F, 0x88, 0x63, 0x03, 0x00, 0x00, 0x8B, 0x4C, 0x24, 0x14, 0x85, 0xC9, 0x0F, 0x84, 0x52, 0x03, 0x00, 0x00, 0x66, 0x83, 0x39, 0x00, 0x8B, 0xC1, 0x74, 0x09, 0x83, 0xC0, 0x02, 0x66, 0x83, 0x38, 0x00, 0x75, 0xF7, 0x2B, 0xC1, 0x83, 0xE0, 0xFE, 0x0F, 0xB7, 0xC0, 0x66, 0x85, 0xC0, 0x0F, 0x84, 0x30, 0x03, 0x00, 0x00, 0x8B, 0x4E, 0x30, 0x8B, 0xF8, 0x8D, 0x47, 0x02, 0x50, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD1, 0x8B, 0xD8, 0x89, 0x5C, 0x24, 0x20, 0x85, 0xDB, 0x74, 0x6E, 0x8B, 0x46, 0x28, 0x57, 0xFF, 0x74, 0x24, 0x18, 0x53, 0xFF, 0xD0, 0x0F, 0xB7, 0x03, 0x83, 0xC4, 0x0C, 0xBA, 0x01, 0x00, 0x00, 0x00, 0x8B, 0xCB, 0x66, 0x85, 0xC0, 0x74, 0x24, 0x8B, 0xF8, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x83, 0xFF, 0x3B, 0x8D, 0x42, 0x01, 0x8D, 0x49, 0x02, 0x0F, 0x45, 0xC2, 0x8B, 0xD0, 0x0F, 0xB7, 0x01, 0x8B, 0xF8, 0x66, 0x85, 0xC0, 0x75, 0xE7, 0x8B, 0x4E, 0x30, 0x8D, 0x04, 0x95, 0x00, 0x00, 0x00, 0x00, 0x50, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD1, 0x8B, 0xF8, 0x89, 0x7C, 0x24, 0x28, 0x85, 0xFF, 0x75, 0x1C, 0x53, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xB8, 0x17, 0x00, 0x00, 0xC0, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x08, 0x00, 0x8B, 0x44, 0x24, 0x20, 0xBB, 0x01, 0x00, 0x00, 0x00, 0x89, 0x07, 0x8B, 0xC8, 0x0F, 0xB7, 0x00, 0x66, 0x85, 0xC0, 0x74, 0x25, 0x8B, 0xD0, 0x0F, 0x1F, 0x44, 0x00, 0x00, 0x8D, 0x41, 0x02, 0x66, 0x83, 0xFA, 0x3B, 0x75, 0x09, 0x33, 0xD2, 0x66, 0x89, 0x11, 0x89, 0x04, 0x9F, 0x43, 0x8B, 0xC8, 0x0F, 0xB7, 0x01, 0x8B, 0xD0, 0x66, 0x85, 0xC0, 0x75, 0xE2, 0x8B, 0x46, 0x30, 0x68, 0x08, 0x02, 0x00, 0x00, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xC8, 0x89, 0x4C, 0x24, 0x1C, 0x85, 0xC9, 0x75, 0x17, 0x57, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xFF, 0x74, 0x24, 0x20, 0xE9, 0x78, 0xFF, 0xFF, 0xFF, 0x8B, 0x45, 0x0C, 0x6A, 0x10, 0x0F, 0xB7, 0x00, 0x89, 0x44, 0x24, 0x40, 0x8B, 0x45, 0x08, 0x05, 0x20, 0x02, 0x00, 0x00, 0x50, 0x8B, 0x46, 0x28, 0x51, 0xFF, 0xD0, 0x8B, 0x44, 0x24, 0x28, 0x83, 0xC4, 0x0C, 0x83, 0xC0, 0x08, 0x0F, 0x57, 0xC0, 0x66, 0x0F, 0x13, 0x44, 0x24, 0x48, 0x89, 0x44, 0x24, 0x18, 0x8B, 0x46, 0x30, 0x6A, 0x18, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xF8,
	0x89, 0x7C, 0x24, 0x34, 0x85, 0xFF, 0x75, 0x16, 0xFF, 0x74, 0x24, 0x1C, 0x50, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x34, 0xFF, 0xD0, 0xFF, 0x74, 0x24, 0x28, 0xEB, 0x89, 0x33, 0xC0, 0xC6, 0x44, 0x24, 0x13, 0x00, 0x89, 0x44, 0x24, 0x38, 0x85, 0xDB, 0x0F, 0x8E, 0x44, 0x01, 0x00, 0x00, 0x8B, 0x4C, 0x24, 0x3C, 0x0F, 0xB7, 0xD1, 0x89, 0x54, 0x24, 0x24, 0x8B, 0x4C, 0x24, 0x28, 0x8B, 0x0C, 0x81, 0x8B, 0xC1, 0x66, 0x83, 0x39, 0x00, 0x74, 0x0A, 0x90, 0x83, 0xC0, 0x02, 0x66, 0x83, 0x38, 0x00, 0x75, 0xF7, 0x2B, 0xC1, 0x83, 0xE0, 0xFE, 0x0F, 0xB7, 0xF8, 0x8D, 0x47, 0x02, 0x03, 0xC2, 0x89, 0x44, 0x24, 0x3C, 0x83, 0xC0, 0x08, 0x3D, 0x08, 0x02, 0x00, 0x00, 0x0F, 0x87, 0x56, 0x01, 0x00, 0x00, 0x8B, 0x46, 0x28, 0x57, 0x51, 0xFF, 0x74, 0x24, 0x20, 0xFF, 0xD0, 0x8B, 0x44, 0x24, 0x24, 0xB9, 0x5C, 0x00, 0x00, 0x00, 0xFF, 0x74, 0x24, 0x30, 0xD1, 0xEF, 0x66, 0x89, 0x0C, 0x78, 0x8D, 0x04, 0x78, 0x8B, 0x4D, 0x0C, 0x83, 0xC0, 0x02, 0xFF, 0x71, 0x04, 0x50, 0x8B, 0x46, 0x28, 0xFF, 0xD0, 0x8B, 0x44, 0x24, 0x54, 0x33, 0xD2, 0x8B, 0x4C, 0x24, 0x30, 0x83, 0xC4, 0x18, 0xD1, 0xE8, 0x66, 0x89, 0x14, 0x41, 0x8B, 0x4C, 0x24, 0x1C, 0x8B, 0xC1, 0x66, 0x39, 0x11, 0x74, 0x08, 0x83, 0xC0, 0x02, 0x66, 0x39, 0x10, 0x75, 0xF8, 0x8B, 0x7C, 0x24, 0x34, 0x2B, 0xC1, 0x6A, 0x20, 0x83, 0xE0, 0xFE, 0x89, 0x4C, 0x24, 0x48, 0x6A, 0x04, 0x66, 0x89, 0x44, 0x24, 0x48, 0x8D, 0x4C, 0x24, 0x50, 0x51, 0xB8, 0x08, 0x02, 0x00, 0x00, 0xC7, 0x07, 0x18, 0x00, 0x00, 0x00, 0x66, 0x89, 0x44, 0x24, 0x4E, 0x8D, 0x4C, 0x24, 0x3C, 0x57, 0x8D, 0x44, 0x24, 0x50, 0x89, 0x57, 0x04, 0x68, 0x00, 0x00, 0x10, 0x00, 0xC7, 0x47, 0x0C, 0x40, 0x00, 0x00, 0x00, 0x89, 0x47, 0x08, 0x89, 0x57, 0x10, 0x89, 0x57, 0x14, 0x8B, 0x06, 0x51, 0x89, 0x54, 0x24, 0x48, 0xFF, 0xD0, 0x89, 0x44, 0x24, 0x2C, 0x85, 0xC0, 0x0F, 0x88, 0xA5, 0x00, 0x00, 0x00, 0x8B, 0x44, 0x24, 0x30, 0x85, 0xC0, 0x0F, 0x84, 0x99, 0x00, 0x00, 0x00, 0x50, 0x8B, 0x46, 0x08, 0xFF, 0xD0, 0xFF, 0x74, 0x24, 0x3C, 0x8B, 0x45, 0x0C, 0x8B, 0x5C, 0x24, 0x1C, 0x53, 0xFF, 0x70, 0x04, 0x8B, 0x46, 0x28, 0xFF, 0xD0, 0x83, 0xC4, 0x0C, 0x8B, 0xC3, 0x66, 0x83, 0x3B, 0x00, 0x74, 0x09, 0x83, 0xC0, 0x02, 0x66, 0x83, 0x38, 0x00, 0x75, 0xF7, 0x8B, 0x4D, 0x0C, 0x2B, 0xC3, 0x83, 0xE0, 0xFE, 0xC6, 0x44, 0x24, 0x13, 0x01, 0x66, 0x89, 0x01, 0x8B, 0x46, 0x34, 0x57, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xFF, 0x74, 0x24, 0x1C, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xFF, 0x74, 0x24, 0x28, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xFF, 0x74, 0x24, 0x20, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x33, 0xC0, 0x38, 0x44, 0x24, 0x13, 0x0F, 0x44, 0x44, 0x24, 0x2C, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x08, 0x00, 0x8B, 0x7C, 0x24, 0x34, 0xEB, 0x04, 0x8B, 0x54, 0x24, 0x24, 0x8B, 0x44, 0x24, 0x38, 0x40, 0x89, 0x44, 0x24, 0x38, 0x3B, 0xC3, 0x0F, 0x8C, 0x57, 0xFE, 0xFF, 0xFF, 0xEB, 0x8E, 0xB8, 0x01, 0x00, 0x00, 0xC0, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x08,
	0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$10", read, write)
__declspec(allocate("wow64_sec$10"))inline unsigned char MMIH_PreprocessModuleName_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x51, 0x53, 0x56, 0x8B, 0x75, 0x08, 0x6A, 0x08, 0x6A, 0x08, 0x8B, 0xB6, 0x7C, 0x02, 0x00, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x30, 0xFF, 0xD0, 0x8B, 0xD8, 0x85, 0xDB, 0x75, 0x0D, 0x5E, 0xB8, 0x17, 0x00, 0x00, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x10, 0x00, 0x57, 0x8B, 0x7D, 0x0C, 0x8B, 0xCF, 0x0F, 0xB7, 0xC7, 0x8B, 0xD0, 0x80, 0x3F, 0x00, 0x74, 0x09, 0x41, 0x0F, 0xB7, 0xC1, 0x80, 0x39, 0x00, 0x75, 0xF7, 0x2B, 0xC2, 0x0F, 0xB7, 0xC0, 0x89, 0x45, 0x0C, 0x66, 0x85, 0xC0, 0x0F, 0x84, 0x8D, 0x00, 0x00, 0x00, 0x8B, 0x4E, 0x30, 0x0F, 0xB7, 0xC0, 0x89, 0x45, 0xFC, 0x40, 0x50, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD1, 0x89, 0x43, 0x04, 0x85, 0xC0, 0x74, 0x71, 0xFF, 0x75, 0xFC, 0x8B, 0x4D, 0x0C, 0x66, 0x89, 0x0B, 0x41, 0x57, 0x66, 0x89, 0x4B, 0x02, 0x50, 0x8B, 0x46, 0x28, 0xFF, 0xD0, 0x8B, 0x46, 0x30, 0x83, 0xC4, 0x0C, 0x6A, 0x08, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xF8, 0x85, 0xFF, 0x74, 0x2F, 0x8B, 0x46, 0x30, 0x68, 0x08, 0x02, 0x00, 0x00, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x89, 0x47, 0x04, 0xB9, 0x08, 0x02, 0x00, 0x00, 0x66, 0x89, 0x4F, 0x02, 0x85, 0xC0, 0x75, 0x3E, 0x57, 0x50, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x34, 0xFF, 0xD0, 0x8B, 0x43, 0x04, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x53, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x5F, 0x5E, 0xB8, 0x17, 0x00, 0x00, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x10, 0x00, 0x8B, 0x46, 0x48, 0x6A, 0x00, 0x53, 0x57, 0xFF, 0xD0, 0x89, 0x45, 0x0C, 0x85, 0xC0, 0x79, 0x52, 0x8B, 0x4F, 0x04, 0x85, 0xC9, 0x74, 0x0E, 0x8B, 0x46, 0x34, 0x51, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x46, 0x34, 0x57, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x43, 0x04, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x46, 0x34, 0x53, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x45, 0x0C, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x10, 0x00, 0x8B, 0x43, 0x04, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x46, 0x34, 0x53, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x45, 0x08, 0x83, 0xB8, 0x30, 0x02, 0x00, 0x00, 0x64, 0x0F, 0x82, 0xE2, 0x00, 0x00, 0x00, 0x8B, 0x46, 0x30, 0x68, 0x08, 0x01, 0x00, 0x00, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xD8, 0x85, 0xDB, 0x74, 0x5F, 0xFF, 0x75, 0x14, 0xB8, 0x00, 0x01, 0x00, 0x00, 0x8B, 0xD3, 0x66, 0x89, 0x43, 0x02, 0x8B, 0xCF, 0x8D, 0x43, 0x08, 0x89, 0x43, 0x04, 0x8B, 0x46, 0x5C, 0x6A, 0x00, 0xFF, 0xD0, 0x89, 0x45, 0x08, 0x85, 0xC0, 0x78, 0x69, 0x8B, 0x4D, 0x10, 0x66, 0x8B, 0x03, 0x66, 0x89, 0x01, 0x0F, 0xB7, 0x43, 0x02, 0x66, 0x89, 0x41, 0x02, 0x83, 0xE0, 0xFE, 0x8B, 0x4E, 0x30, 0x50, 0x6A, 0x08, 0xFF, 0xB6, 0xD4, 0x00, 0x00,
	0x00, 0xFF, 0xD1, 0x8B, 0xC8, 0x8B, 0x45, 0x10, 0x89, 0x48, 0x04, 0x85, 0xC9, 0x75, 0x28, 0x8B, 0x46, 0x34, 0x53, 0x51, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x47, 0x04, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x57, 0xE9, 0xBE, 0xFE, 0xFF, 0xFF, 0x0F, 0xB7, 0x00, 0x50, 0x8D, 0x43, 0x08, 0x50, 0x8B, 0x46, 0x28, 0x51, 0xFF, 0xD0, 0x83, 0xC4, 0x0C, 0xEB, 0x54, 0x8B, 0x46, 0x34, 0x53, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x47, 0x04, 0x85, 0xC0, 0x74, 0x0E, 0x50, 0x8B, 0x46, 0x34, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x46, 0x34, 0x57, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0x45, 0x08, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x10, 0x00, 0x8B, 0x4D, 0x10, 0x0F, 0xB7, 0x07, 0x66, 0x89, 0x01, 0x0F, 0xB7, 0x47, 0x02, 0x66, 0x89, 0x41, 0x02, 0x8B, 0x47, 0x04, 0x89, 0x41, 0x04, 0x8B, 0x46, 0x34, 0x57, 0x6A, 0x00, 0xFF, 0xB6, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x5F, 0x5E, 0x33, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x10, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$11", read, write)
__declspec(allocate("wow64_sec$11"))inline unsigned char MMIH_LoadModule_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x0C, 0x53, 0x56, 0x57, 0x8B, 0x7D, 0x08, 0xC7, 0x45, 0x08, 0x00, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x87, 0x30, 0x02, 0x00, 0x00, 0x8B, 0x9F, 0x7C, 0x02, 0x00, 0x00, 0x83, 0xF8, 0x64, 0x0F, 0x82, 0x91, 0x00, 0x00, 0x00, 0x8B, 0x43, 0x30, 0x6A, 0x50, 0x6A, 0x08, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xF0, 0x85, 0xF6, 0x0F, 0x84, 0xEB, 0x00, 0x00, 0x00, 0x81, 0xBF, 0x34, 0x02, 0x00, 0x00, 0x5A, 0x29, 0x00, 0x00, 0x8B, 0x4D, 0x0C, 0x8B, 0x41, 0x04, 0x75, 0x05, 0x89, 0x46, 0x0C, 0xEB, 0x03, 0x89, 0x46, 0x10, 0x81, 0xBF, 0x34, 0x02, 0x00, 0x00, 0xF0, 0x55, 0x00, 0x00, 0x8D, 0x55, 0x08, 0x8B, 0x43, 0x3C, 0x72, 0x27, 0x6A, 0x00, 0x52, 0x8D, 0x55, 0xFC, 0x52, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x04, 0xFF, 0x75, 0x10, 0x8B, 0xD6, 0xFF, 0xD0, 0x8B, 0x43, 0x34, 0x56, 0x6A, 0x00, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xE9, 0x06, 0x01, 0x00, 0x00, 0x52, 0x8D, 0x55, 0xFC, 0x52, 0x6A, 0x00, 0x6A, 0x00, 0x6A, 0x04, 0xFF, 0x75, 0x10, 0x8B, 0xD6, 0xFF, 0xD0, 0x8B, 0x43, 0x34, 0x56, 0x6A, 0x00, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xE9, 0xE1, 0x00, 0x00, 0x00, 0x83, 0xF8, 0x3F, 0x75, 0x54, 0x8B, 0x43, 0x30, 0x6A, 0x14, 0x6A, 0x08, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x89, 0x45, 0xF4, 0x85, 0xC0, 0x74, 0x58, 0x8B, 0x7D, 0x0C, 0x8B, 0xD0, 0x8B, 0x4F, 0x04, 0x89, 0x48, 0x0C, 0x8D, 0x4D, 0xF8, 0x8B, 0x73, 0x38, 0x51, 0x8D, 0x4D, 0xFC, 0xC7, 0x45, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x51, 0x6A, 0x01, 0xFF, 0x75, 0x10, 0x8B, 0xCF, 0xFF, 0xD6, 0xFF, 0x75, 0xF4, 0x89, 0x45, 0x08, 0x8B, 0x43, 0x34, 0x6A, 0x00, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xE9, 0x88, 0x00, 0x00, 0x00, 0x83, 0xF8, 0x3E, 0x75, 0x5E, 0x8B, 0x43, 0x30, 0x6A, 0x18, 0x6A, 0x08, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x8B, 0xF0, 0x85, 0xF6, 0x75, 0x0E, 0x5F, 0x5E, 0xB8, 0x17, 0x00, 0x00, 0xC0, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x14, 0x00, 0x8B, 0x4D, 0x0C, 0x8D, 0x55, 0xF4, 0x52, 0x8D, 0x55, 0xFC, 0x52, 0x8B, 0x41, 0x04, 0x6A, 0x01, 0xFF, 0x75, 0x10, 0x89, 0x46, 0x04, 0xC6, 0x46, 0x08, 0x01, 0x8B, 0x43, 0x38, 0x56, 0x51, 0xC7, 0x45, 0xF4, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0x56, 0x89, 0x45, 0x08, 0x8B, 0x43, 0x34, 0x6A, 0x00, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0xFF, 0xD0, 0xEB, 0x25, 0x83, 0xF8, 0x3D, 0x0F, 0x85, 0x76, 0x01, 0x00, 0x00, 0x8B, 0x43, 0x38, 0x8D, 0x4D, 0xFC, 0x51, 0x6A, 0x00, 0x6A, 0x01, 0xFF, 0x75, 0x10, 0xFF, 0xB3, 0x8C, 0x00, 0x00, 0x00, 0xFF, 0x75, 0x0C, 0xFF, 0xD0, 0x89, 0x45, 0x08, 0x83, 0x7D, 0x08, 0x00, 0x0F, 0x8C, 0x57, 0x01, 0x00, 0x00, 0x8B, 0x55, 0xFC, 0x85, 0xD2, 0x0F, 0x84, 0x32, 0x01, 0x00, 0x00, 0x8B, 0x4D, 0x14, 0x8B, 0x75, 0x18, 0x8B, 0x42, 0x18, 0x89, 0x01, 0x85, 0xF6, 0x0F, 0x84, 0x39, 0x01, 0x00, 0x00, 0x8B, 0x0E, 0x85, 0xC9, 0x0F, 0x85, 0x81, 0x00, 0x00, 0x00, 0x8B, 0x45, 0x14, 0x8D, 0x7A, 0x24, 0x68, 0x14, 0x02, 0x00, 0x00, 0x6A, 0x08, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x00, 0x89, 0x45, 0x10, 0x8B, 0x43, 0x30, 0xFF, 0xD0, 0x89, 0x06, 0x85, 0xC0,
	0x0F, 0x84, 0x08, 0x01, 0x00, 0x00, 0x8B, 0x4D, 0x10, 0x89, 0x00, 0x8B, 0x06, 0x89, 0x40, 0x04, 0x8B, 0x06, 0x89, 0x48, 0x08, 0x85, 0xFF, 0x0F, 0x84, 0xF1, 0x00, 0x00, 0x00, 0x0F, 0xB7, 0x17, 0xB9, 0x00, 0x02, 0x00, 0x00, 0x66, 0x3B, 0xD1, 0x0F, 0x83, 0xE0, 0x00, 0x00, 0x00, 0x8B, 0x06, 0x52, 0x66, 0x89, 0x50, 0x0C, 0x8B, 0x06, 0x66, 0x89, 0x48, 0x0E, 0x8B, 0x0E, 0x8D, 0x41, 0x14, 0x89, 0x41, 0x10, 0x8B, 0x06, 0xFF, 0x77, 0x04, 0x83, 0xC0, 0x14, 0x50, 0x8B, 0x43, 0x28, 0xFF, 0xD0, 0x8B, 0x45, 0x08, 0x83, 0xC4, 0x0C, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x14, 0x00, 0x8B, 0x7A, 0x18, 0x8B, 0xC1, 0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x39, 0x78, 0x08, 0x0F, 0x84, 0x99, 0x00, 0x00, 0x00, 0x8B, 0x00, 0x3B, 0xC1, 0x75, 0xF1, 0x8B, 0x45, 0x14, 0x8D, 0x7A, 0x24, 0x68, 0x14, 0x02, 0x00, 0x00, 0x6A, 0x08, 0xFF, 0xB3, 0xD4, 0x00, 0x00, 0x00, 0x8B, 0x00, 0x89, 0x45, 0x10, 0x8B, 0x43, 0x30, 0xFF, 0xD0, 0x8B, 0xD0, 0x85, 0xD2, 0x74, 0x70, 0x8B, 0x0E, 0x89, 0x0A, 0x8B, 0x0E, 0x8B, 0x49, 0x04, 0x89, 0x4A, 0x04, 0x8B, 0x0E, 0x8B, 0x41, 0x04, 0x89, 0x10, 0x8B, 0x06, 0x89, 0x50, 0x04, 0x8B, 0x45, 0x10, 0x89, 0x42, 0x08, 0x85, 0xFF, 0x74, 0x4E, 0x0F, 0xB7, 0x07, 0xB9, 0x00, 0x02, 0x00, 0x00, 0x66, 0x3B, 0xC1, 0x73, 0x41, 0x66, 0x89, 0x4A, 0x0E, 0x8D, 0x4A, 0x14, 0x50, 0x66, 0x89, 0x42, 0x0C, 0x89, 0x4A, 0x10, 0xFF, 0x77, 0x04, 0x8B, 0x43, 0x28, 0x51, 0xFF, 0xD0, 0x8B, 0x45, 0x08, 0x83, 0xC4, 0x0C, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x14, 0x00, 0x5F, 0x5E, 0xC7, 0x45, 0x08, 0x35, 0x01, 0x00, 0xC0, 0x8B, 0x45, 0x08, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x14, 0x00, 0xC7, 0x45, 0x08, 0x02, 0x00, 0x00, 0xC0, 0x8B, 0x45, 0x08, 0x5F, 0x5E, 0x5B, 0x8B, 0xE5, 0x5D, 0xC2, 0x14, 0x00, 0xCC, 0xCC
};

#pragma section("wow64_sec$12", read, write)
__declspec(allocate("wow64_sec$12"))inline unsigned char VectoredHandlerShell_WOW64[] =
{
	0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x3C, 0x56, 0xC7, 0x45, 0xEC, 0x0C, 0xB0, 0xCE, 0xFA, 0xC7, 0x45, 0xE8, 0x00, 0x00, 0x00, 0x00, 0x64, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x89, 0x45, 0xE8, 0x83, 0x7D, 0xE8, 0x00, 0x75, 0x07, 0x33, 0xC0, 0xE9, 0xC8, 0x02, 0x00, 0x00, 0xC7, 0x45, 0xE4, 0x00, 0x00, 0x00, 0x00, 0x8B, 0x4D, 0xEC, 0x83, 0x79, 0x08, 0x3D, 0x75, 0x09, 0xC7, 0x45, 0xD4, 0x01, 0x00, 0x00, 0x00, 0xEB, 0x07, 0xC7, 0x45, 0xD4, 0x00, 0x00, 0x00, 0x00, 0x8A, 0x55, 0xD4, 0x88, 0x55, 0xFF, 0x0F, 0xB6, 0x45, 0xFF, 0x85, 0xC0, 0x74, 0x17, 0x8B, 0x4D, 0xEC, 0x8B, 0x51, 0x0C, 0xB8, 0x10, 0x00, 0x00, 0x00, 0x6B, 0xC8, 0x00, 0x8D, 0x54, 0x0A, 0x0C, 0x89, 0x55, 0xE4, 0xEB, 0x15, 0x8B, 0x45, 0xEC, 0x8B, 0x48, 0x0C, 0xBA, 0x10, 0x00, 0x00, 0x00, 0x6B, 0xC2, 0x00, 0x8D, 0x4C, 0x01, 0x10, 0x89, 0x4D, 0xE4, 0x8B, 0x55, 0xEC, 0x83, 0x7A, 0x08, 0x3F, 0x72, 0x0E, 0x8B, 0x45, 0xEC, 0x8B, 0x48, 0x10, 0x89, 0x4D, 0xC8, 0x6A, 0x00, 0xFF, 0x55, 0xC8, 0x8B, 0x15, 0x30, 0x03, 0xFE, 0x7F, 0x89, 0x55, 0xCC, 0xEB, 0x08, 0x8B, 0x45, 0xE8, 0x8B, 0x08, 0x89, 0x4D, 0xE8, 0x83, 0x7D, 0xE8, 0x00, 0x0F, 0x84, 0x21, 0x02, 0x00, 0x00, 0x83, 0x7D, 0xE8, 0xFF, 0x0F, 0x84, 0x17, 0x02, 0x00, 0x00, 0x8B, 0x55, 0xE8, 0x83, 0x3A, 0xFF, 0x0F, 0x84, 0x0B, 0x02, 0x00, 0x00, 0xC7, 0x45, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x45, 0xF0, 0x83, 0xC0, 0x01, 0x89, 0x45, 0xF0, 0x8B, 0x4D, 0xEC, 0x8B, 0x51, 0x0C, 0x8B, 0x45, 0xF0, 0x3B, 0x02, 0x0F, 0x83, 0xE3, 0x01, 0x00, 0x00, 0x0F, 0xB6, 0x4D, 0xFF, 0x85, 0xC9, 0x75, 0x08, 0x83, 0x7D, 0xF0, 0x00, 0x75, 0x02, 0xEB, 0xD6, 0x8B, 0x55, 0xF0, 0xC1, 0xE2, 0x04, 0x8B, 0x45, 0xEC, 0x8B, 0x08, 0x8B, 0x45, 0xE4, 0x39, 0x4C, 0x10, 0x04, 0x74, 0x02, 0xEB, 0xC0, 0x8B, 0x4D, 0xEC, 0x8B, 0x11, 0x8B, 0x45, 0xE8, 0x39, 0x50, 0x04, 0x72, 0x13, 0x8B, 0x4D, 0xEC, 0x8B, 0x11, 0x8B, 0x45, 0xEC, 0x03, 0x50, 0x04, 0x8B, 0x4D, 0xE8, 0x39, 0x51, 0x04, 0x72, 0x02, 0xEB, 0x9E, 0xC6, 0x45, 0xFE, 0x00, 0x8B, 0x55, 0xF0, 0xC1, 0xE2, 0x04, 0x8B, 0x45, 0xE4, 0x8B, 0x0C, 0x10, 0x89, 0x4D, 0xDC, 0x8B, 0x55, 0xCC, 0x83, 0xE2, 0x1F, 0x89, 0x55, 0xD0, 0x8B, 0x4D, 0xD0, 0xF7, 0xD9, 0x8B, 0x45, 0xDC, 0xD3, 0xE8, 0x8B, 0x55, 0xDC, 0x8B, 0x4D, 0xD0, 0xD3, 0xE2, 0x0B, 0xD0, 0x89, 0x55, 0xDC, 0x8B, 0x45, 0xDC, 0x33, 0x45, 0xCC, 0x89, 0x45, 0xDC, 0x8B, 0x4D, 0xDC, 0x89, 0x4D, 0xF4, 0x8B, 0x55, 0xF4, 0x89, 0x55, 0xE0, 0xEB, 0x09, 0x8B, 0x45, 0xE0, 0x83, 0xC0, 0x04, 0x89, 0x45, 0xE0, 0x83, 0x7D, 0xE0, 0x00, 0x74, 0x71, 0x8B, 0x4D, 0xF4, 0x81, 0xC1, 0x00, 0x04, 0x00, 0x00, 0x39, 0x4D, 0xE0, 0x73, 0x63, 0x8B, 0x55, 0xE0, 0x83, 0x3A, 0x00, 0x75, 0x3D, 0x8B, 0x45, 0xF0, 0xC1, 0xE0, 0x04, 0x8B, 0x4D, 0xE8, 0x8B, 0x55, 0xE4, 0x8B, 0x49, 0x04, 0x2B, 0x4C, 0x02, 0x04, 0x8B, 0x55, 0xE0, 0x89, 0x0A, 0x8B, 0x45, 0xF0, 0xC1, 0xE0, 0x04, 0x8B, 0x4D, 0xE4, 0x8B, 0x54, 0x01, 0x0C, 0x83, 0xC2, 0x01, 0x8B, 0x45, 0xF0, 0xC1, 0xE0, 0x04, 0x8B, 0x4D, 0xE4, 0x89, 0x54, 0x01, 0x0C, 0xC6, 0x45, 0xFE, 0x01, 0xEB, 0x20, 0xEB, 0x1C, 0x8B, 0x55, 0xF0, 0xC1, 0xE2, 0x04, 0x8B, 0x45, 0xE4, 0x8B, 0x4C, 0x10, 0x04, 0x8B,
	0x55, 0xE0, 0x03, 0x0A, 0x8B, 0x45, 0xE8, 0x39, 0x48, 0x04, 0x75, 0x02, 0xEB, 0x02, 0xEB, 0x80, 0x0F, 0xB6, 0x4D, 0xFE, 0x85, 0xC9, 0x0F, 0x84, 0xC0, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xD8, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x09, 0x8B, 0x55, 0xD8, 0x83, 0xC2, 0x01, 0x89, 0x55, 0xD8, 0x8B, 0x45, 0xF0, 0xC1, 0xE0, 0x04, 0x8B, 0x4D, 0xE4, 0x8B, 0x55, 0xD8, 0x3B, 0x54, 0x01, 0x0C, 0x0F, 0x83, 0x98, 0x00, 0x00, 0x00, 0x8B, 0x45, 0xF0, 0xC1, 0xE0, 0x04, 0x8B, 0x4D, 0xE4, 0x8B, 0x54, 0x01, 0x0C, 0x83, 0xEA, 0x01, 0x89, 0x55, 0xF8, 0xEB, 0x09, 0x8B, 0x45, 0xF8, 0x83, 0xE8, 0x01, 0x89, 0x45, 0xF8, 0x8B, 0x4D, 0xF8, 0x3B, 0x4D, 0xD8, 0x76, 0x6D, 0x8B, 0x55, 0xF8, 0x8B, 0x45, 0xF4, 0x8B, 0x4D, 0xF8, 0x8B, 0x75, 0xF4, 0x8B, 0x54, 0x90, 0xFC, 0x3B, 0x14, 0x8E, 0x76, 0x56, 0x8B, 0x45, 0xF8, 0x8B, 0x4D, 0xF4, 0x8B, 0x55, 0xF8, 0x8B, 0x75, 0xF4, 0x8B, 0x44, 0x81, 0xFC, 0x33, 0x04, 0x96, 0x8B, 0x4D, 0xF8, 0x8B, 0x55, 0xF4, 0x89, 0x44, 0x8A, 0xFC, 0x8B, 0x45, 0xF8, 0x8B, 0x4D, 0xF4, 0x8B, 0x55, 0xF8, 0x8B, 0x75, 0xF4, 0x8B, 0x04, 0x81, 0x33, 0x44, 0x96, 0xFC, 0x8B, 0x4D, 0xF8, 0x8B, 0x55, 0xF4, 0x89, 0x04, 0x8A, 0x8B, 0x45, 0xF8, 0x8B, 0x4D, 0xF4, 0x8B, 0x55, 0xF8, 0x8B, 0x75, 0xF4, 0x8B, 0x44, 0x81, 0xFC, 0x33, 0x04, 0x96, 0x8B, 0x4D, 0xF8, 0x8B, 0x55, 0xF4, 0x89, 0x44, 0x8A, 0xFC, 0xEB, 0x82, 0xE9, 0x49, 0xFF, 0xFF, 0xFF, 0xE9, 0x03, 0xFE, 0xFF, 0xFF, 0xE9, 0xCD, 0xFD, 0xFF, 0xFF, 0x8B, 0x45, 0xEC, 0x83, 0x78, 0x08, 0x3F, 0x72, 0x0E, 0x8B, 0x4D, 0xEC, 0x8B, 0x51, 0x10, 0x89, 0x55, 0xC4, 0x6A, 0x01, 0xFF, 0x55, 0xC4, 0x33, 0xC0, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x04, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC
};

#pragma section("wow64_sec$13", read, write)
__declspec(allocate("wow64_sec$13")) inline unsigned char WOW64_SEC_END[] =
{
	1, 3, 3, 7
};

#endif