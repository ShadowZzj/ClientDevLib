include(${CMAKE_CURRENT_LIST_DIR}/GeneralFeatures.cmake)

if(WIN32)
    include(${CMAKE_CURRENT_LIST_DIR}/WinFeatures.cmake)
    
    function(GenerateUtil)
        GenerateWindowsUtil()
        set(WINDOWS_UTIL_FILES ${WINDOWS_UTIL_FILES} PARENT_SCOPE)
        GenerateGeneralUtil()
        set(GENERAL_UTIL_FILES ${GENERAL_UTIL_FILES} PARENT_SCOPE)
    endfunction()

    if(BUILD_TYPE STREQUAL "Release")
        set(LibconfigLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/libconfig/win/x64/Release/libconfig++.lib )
        set(LibconfigDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/libconfig/win/x64/Release/libconfig++.dll )
    else()
        set(LibconfigLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/libconfig/win/x64/Debug/libconfig++.lib )
        set(LibconfigDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/libconfig/win/x64/Debug/libconfig++.dll )
    endif()

    set(CurlLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/curl/win/x64/libcurl.lib )
    set(CurlDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/curl/win/x64/libcurl.dll )
    set(SqliteLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/sqlite3/win/x64/sqlite3.lib )
    set(SqliteDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/sqlite3/win/x64/sqlite3.dll )
    set(GrpcLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/grpc/win/lib/*.lib )
    set(LuaLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/lua/win/lib/lua5.4.3-static.lib )
    set(ZipperLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/zipper/libzip/win/staticZipper.lib )
    set(ZLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/zlib/lib/win/zlibstatic.lib )
    set(ZlibDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/grpc/win/bin/zlib.dll )
    set(VCRUNTIME140DLL ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/grpc/win/bin/vcruntime140.dll )
    set(LIEFLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/LIEF/win/lib/LIEF.lib )
    set(LIEFDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/LIEF/win/lib/LIEF.dll )
    set(SSLLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/openssl/win/dynamic/libssl.lib )
    set(CryptoLib ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/openssl/win/dynamic/libcrypto.lib )
    set(SSLDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/openssl/win/dynamic/libssl-1_1-x64.dll )
    set(CryptoDll ${CMAKE_CURRENT_LIST_DIR}/General/ThirdParty/openssl/win/dynamic/libcrypto-1_1-x64.dll )

elseif(APPLE)
    include(${CMAKE_CURRENT_LIST_DIR}/MacFeatures.cmake)
    
    function(GenerateUtil)
        GenerateMacOSUtil()
        set(MACOS_UTIL_FILES ${MACOS_UTIL_FILES} PARENT_SCOPE)
        GenerateGeneralUtil()
        set(GENERAL_UTIL_FILES ${GENERAL_UTIL_FILES} PARENT_SCOPE)
    endfunction()
endif()
